t %>% t %>% as.data.frame()
colnames(o) <-'P_value'
o$mean <- m
o$sig  <- ifelse(    o$P<0.001, '***', ifelse(o$P<0.05, '**' ,  'ns'))
return(o %>% select(mean , sig , P_value))
}
wilcox_test_to0(iris, Species)
wilcox_test_to0(iris, Species)
wilcox_test_to0 <- function( data , treatment ){
require(tidyverse)
data_name = deparse(substitute(data))
num_data <- iris %>%
select_if(is.numeric)
m <- num_data %>%
map ( unlist ) %>%
map ( as.numeric ) %>%
map ( ~round(mean(.x , na.rm = T),2) ) %>%
t %>%
t %>%
as.data.frame()
o <- num_data %>%
map ( unlist ) %>%
map ( as.numeric ) %>%
map ( ~ wilcox.test( .x , rep(0,length(.x)) )) %>%
map ( ~ .x$p.value ) %>%
t %>% t %>% as.data.frame()
colnames(m) <- 'mean'
colnames(o) <-'P_value'
o$mean <- m
o$sig  <- ifelse( o$P<0.001, '***', ifelse(o$P<0.05, '**' ,  'ns'))
o$response <- rownames(o)
return(o %>% select(response, mean , sig , P_value))
}
wilcox_test_to0(iris, Species)
rownames(o) <- NULL
return(o %>% select(response, mean , sig , P_value))
wilcox_test_to0 <- function( data , treatment ){
require(tidyverse)
data_name = deparse(substitute(data))
num_data <- iris %>%
select_if(is.numeric)
m <- num_data %>%
map ( unlist ) %>%
map ( as.numeric ) %>%
map ( ~round(mean(.x , na.rm = T),2) ) %>%
t %>%
t %>%
as.data.frame()
o <- num_data %>%
map ( unlist ) %>%
map ( as.numeric ) %>%
map ( ~ wilcox.test( .x , rep(0,length(.x)) )) %>%
map ( ~ .x$p.value ) %>%
t %>% t %>% as.data.frame()
colnames(m) <- 'mean'
colnames(o) <-'P_value'
o$mean <- m
o$sig  <- ifelse( o$P<0.001, '***', ifelse(o$P<0.05, '**' ,  'ns'))
o$response <- rownames(o)
rownames(o) <- NULL
return(o %>% select(response, mean , sig , P_value))
}
wilcox_test_to0(iris, Species)
wilcox_test_to0 <- function( data , treatment ){
require(tidyverse)
num_data <- iris %>%
select_if(is.numeric)
m <- num_data %>%
map ( unlist ) %>%
map ( as.numeric ) %>%
map ( ~round(mean(.x , na.rm = T),2) ) %>%
t %>%
t %>%
as.data.frame
o <- num_data %>%
map ( unlist ) %>%
map ( as.numeric ) %>%
map ( ~ wilcox.test( .x , rep(0,length(.x)) )) %>%
map ( ~ .x$p.value ) %>%
t %>% t %>% as.data.frame
colnames(m) <- 'mean'
colnames(o) <-'P_value'
o$mean <- m
o$sig  <- ifelse( o$P<0.001, '***', ifelse(o$P<0.05, '**' ,  'ns'))
o$response <- rownames(o)
rownames(o) <- NULL
return(o %>% select(response, mean , sig , P_value))
}
wilcox_test_to0(iris, Species)
wilcox_test_to0 <- function( data , treatment ){
require(tidyverse)
num_data <- data %>%
select_if(is.numeric)
m <- num_data %>%
map ( unlist ) %>%
map ( as.numeric ) %>%
map ( ~round(mean(.x , na.rm = T),2) ) %>%
t %>%
t %>%
as.data.frame
o <- num_data %>%
map ( unlist ) %>%
map ( as.numeric ) %>%
map ( ~ wilcox.test( .x , rep(0,length(.x)) )) %>%
map ( ~ .x$p.value ) %>%
t %>% t %>% as.data.frame
colnames(m) <- 'mean'
colnames(o) <-'P_value'
o$mean <- m
o$sig  <- ifelse( o$P<0.001, '***', ifelse(o$P<0.05, '**' ,  'ns'))
o$response <- rownames(o)
rownames(o) <- NULL
return(o %>% select(response, mean , sig , P_value))
}
wilcox_test_to0(iris, Species)
wilcox_test_to0 <- function( data , treatment ){
require(tidyverse)
num_data <- data %>%
select_if(is.numeric)
m <- num_data %>%
map ( unlist ) %>%
map ( as.numeric ) %>%
map ( ~round(mean(.x , na.rm = T),2) ) %>%
t %>%
t %>%
as.data.frame
o <- num_data %>%
map ( unlist ) %>%
map ( as.numeric ) %>%
map ( ~ wilcox.test( .x , rep(0,length(.x)) )) %>%
map ( ~ .x$p.value ) %>%
t %>% t %>% as.data.frame
colnames(m) <- 'mean'
colnames(o) <-'P_value'
o$mean <- m
o$sig  <- ifelse( o$P<0.001, '***', ifelse(o$P<0.05, '**' ,  'ns'))
o$response <- rownames(o)
rownames(o) <- NULL
return(o %>% select(response, mean , sig , P_value))
}
wilcox_test_to0(iris, Species)
car
data(car)
mtcars
wilcox_test_to0(mtcars, am)
wilcox_test_to0(mtcars, vs)
data.frame(x = rep(0,10),
y = rep(1,10))
wilcox_test_to0(data.frame(x = rep(0,10),
y = rep(1,10)), x)
wilcox_test_to0(data.frame(x = rep(0,10),
y = rep(1,10)), y)
wilcox_test_to0(data.frame(x = rep(0.5,10),
y = rep(1,10)), y)
wilcox_test_to0(data.frame(x = rep(0.1,10),
y = rep(1,10)), y)
wilcox_test_to0(data.frame(x = rep(0,10),
y = rep(1,10)), y)
wilcox_test_to0(data.frame(x = c(0,0,0,0,0,-1,-1,-1,-1,-1),
y = rep(1,10)), y)
wilcox_test_to0(data.frame(x = c(0,0,0,0,0,-1,-1,-1,-1,-1),
y = rep(1,10)), y)
wilcox_test_to0(data.frame(x = c(0,0,0,0,0,10,-1,-1,-1,-1),
y = rep(1,10)), y)
wilcox_test_to0 <- function( data , treatment ){
require(tidyverse)
num_data <- data %>%
select_if(is.numeric)
m <- num_data %>%
map ( unlist ) %>%
map ( as.numeric ) %>%
map ( ~round(mean(.x , na.rm = T),2) ) %>%
t %>%
t %>%
as.data.frame
o <- num_data %>%
map ( unlist ) %>%
map ( as.numeric ) %>%
map ( ~ wilcox.test( .x , rep(0,length(.x)) )) %>%
map ( ~ .x$p.value ) %>%
t %>% t %>% as.data.frame
colnames(m) <- 'Mean'
colnames(o) <-'P_value'
o$Mean <- m
o$Sig  <- ifelse( o$P<0.001, '***', ifelse(o$P<0.05, '**' ,  'ns'))
o$Response <- rownames(o)
rownames(o) <- NULL
return(o %>% select(Response, Mean , Sig , P_value))
}
data(mtcars)
wilcox_test_to0(mtcars, vs)
wilcox_test_to0(data.frame(x = c(0,0,0,0,0,10,-1,-1,-1,-1),
y = rep(1,10)), y)
mtcars
data %>%
select_if(is.numeric)
mtcars %>%
select_if(is.numeric)
mtcars %>%
select_if(is.numeric) %>%
colnames
var <- mtcars %>%
select_if(is.numeric) %>%
colnames
var
var[1]
var[i] var[i+1]
var[i+1]
var[i]
var[i+1]
i=1
var[i]
var[i+1]
pairwise.wilcox.test(
)
pairwise.wilcox.test
?pairwise.table
?melt
xj <- x[as.integer(df_s1$line) == j]
??comparedf
x
data.frame(x = c(0,0,0,0,0,10,-1,-1,-1,-1),
y = rep(1,10))
df <- data.frame(x = c(0,0,0,0,0,10,-1,-1,-1,-1),
y = rep(1,10))
df <- data.frame(x = c(0,0,0,0,0,10,-1,-1,-1,-1),
y = rep(1,10),
z = rep ( 10 , 10))
df
df[,1]
length(colnames(df))
for (i in 1:length(colnames(df))){
for ( j in i+1){
print(i,j)
}
}
print(c(i,j))
for (i in 1:length(colnames(df))){
for ( j in i+1){
print(c(i,j))
}
}
for (i in 1:length(colnames(df))){
for ( j in i+1){
print(c(i,j))
}
}
for (i in 1:length(colnames(df))){
for ( j in 1:i+1){
print(c(i,j))
}
}
reduce(1:10)
reduce( print(1:10))
1:3 %>% reduce(`+`)
1:3 %>% accumulate (`+`)
1:3 %>% accumulate (print)
1:3
1:3 %>% accumulate (print)
pairwise.wilcox.test(
df_s1$app,
df_s1$line,
p.adjust.method = 'bonf')
pairwise.wilcox.test(
df_s1$app,
df_s1$line,
p.adjust.method = 'bonf') %>% suppressWarnings
pairwise.wilcox.test(
data$obs,
data$group,
p.adjust.method = 'bonf') %>% suppressWarnings
wilcox_test_each_other<- function(data , obs , group , p.adjust.method){
pairwise.wilcox.test(
data$obs,
data$group,
p.adjust.method = 'bonf') %>% suppressWarnings}
iris
wilcox_test_each_other(iris,Petal.Length ,Species)
wilcox_test_each_other(iris, Petal.Length ,Species)
wilcox_test_to0(mtcars, vs)
wilcox_test_to0 <- function( data){
require(tidyverse)
num_data <- data %>%
select_if(is.numeric)
m <- num_data %>%
map ( unlist ) %>%
map ( as.numeric ) %>%
map ( ~round(mean(.x , na.rm = T),2) ) %>%
t %>%
t %>%
as.data.frame
o <- num_data %>%
map ( unlist ) %>%
map ( as.numeric ) %>%
map ( ~ wilcox.test( .x , rep(0,length(.x)) )) %>%
map ( ~ .x$p.value ) %>%
t %>% t %>% as.data.frame
colnames(m) <- 'Mean'
colnames(o) <-'P_value'
o$Mean <- m
o$Sig  <- ifelse( o$P<0.001, '***', ifelse(o$P<0.05, '**' ,  'ns'))
o$Response <- rownames(o)
rownames(o) <- NULL
return(o %>% select(Response, Mean , Sig , P_value))
}
wilcox_test_to0(mtcars, vs)
wilcox_test_to0(mtcars)
wilcox_test_each_other<- function(data , obs , treatment , p.adjust.method){
pairwise.wilcox.test(
data$obs,
data$treatment,
p.adjust.method = as.character(p.adjust.method) ) %>% suppressWarnings}
wilcox_test_each_other(iris, Petal.Length ,Species)
wilcox_test_each_other(iris, Petal.Length ,Species ,'bonf')
wilcox_test_each_other<- function(data , obs , treatment , p.adjust.method){
attach(data)
pairwise.wilcox.test(
obs,
treatment,
p.adjust.method = as.character(p.adjust.method) ) %>% suppressWarnings}
wilcox_test_each_other(iris, Petal.Length ,Species ,'bonf')
wilcox_test_each_other<- function(data , obs , treatment , p.adjust.method){
attach(data)
obs_name = deparse(substitute(obs))
treatment_name = deparse(substitute(treatment))
data_name = deparse(substitute(data))
pairwise.wilcox.test(
'obs_name'=obs,
'treatment_name'=treatment,
p.adjust.method = as.character(p.adjust.method) ) %>% suppressWarnings}
wilcox_test_each_other(iris, Petal.Length ,Species ,'bonf')
wilcox_test_each_other <- function(data , obs , treatment , p.adjust.method){
attach(data)
obs_name = deparse(substitute(obs))
treatment_name = deparse(substitute(treatment))
data_name = deparse(substitute(data))
pairwise.wilcox.test(
'obs_name'=obs,
'treatment_name'=treatment,
p.adjust.method = as.character(p.adjust.method) ) %>% suppressWarnings}
wilcox_test_each_other(iris, Petal.Length ,Species ,'bonf')
pairwise.wilcox.test(
obs,
treatment,
p.adjust.method = as.character(p.adjust.method) ) %>% suppressWarnings}
wilcox_test_each_other(iris, Petal.Length ,Species ,'bonf')
wilcox_test_each_other <- function(data , obs , treatment , p.adjust.method){
attach(data)
obs_name = deparse(substitute(obs))
treatment_name = deparse(substitute(treatment))
data_name = deparse(substitute(data))
pairwise.wilcox.test(
obs,
treatment,
p.adjust.method = as.character(p.adjust.method) ) %>% suppressWarnings}
wilcox_test_each_other(iris, Petal.Length ,Species ,'bonf')
o<-pairwise.wilcox.test(
obs,
treatment,
p.adjust.method = as.character(p.adjust.method) ) %>% suppressWarnings
o<-pairwise.wilcox.test(
obs,
treatment,
p.adjust.method = 'bonf') ) %>% suppressWarnings
o<-pairwise.wilcox.test(
obs,
treatment,
p.adjust.method = 'bonf' ) %>% suppressWarnings
o <- pairwise.wilcox.test(df_s1$app,df_s1$line,p.adjust.method = 'bonf')
o$method
o$data.name
o$p.value
o$data.name
o$p.adjust.method
pairwise_wilcox_test(dep_var = mtcars$wt, indep_var = mtcars$cyl)
wilcox_test_each_other(iris, Petal.Length ,Species ,'bonf')
wilcox_test_each_other <- function(data , obs , treatment , p.adjust.method){
attach(data)
obs %>%  deparse(substitute(.))
treatment_name = deparse(substitute(treatment))
data_name = deparse(substitute(data))
pairwise.wilcox.test(
obs,
treatment,
p.adjust.method = as.character(p.adjust.method) ) %>% suppressWarnings
}
wilcox_test_each_other(iris, Petal.Length ,Species ,'bonf')
pairwise.wilcox.test(df_s1$app,df_s1$line,p.adjust.method = 'bonf')
o <- pairwise.wilcox.test(iris$Sepal.Length~iris$Species,p.adjust.method = 'bonf')
o <- pairwise.wilcox.test(iris$Sepal.Length~iris$Species,p.adjust.method = 'bonf')
o
o <- pairwise.wilcox.test(iris$Sepal.Length,iris$Species,p.adjust.method = 'bonf')
o
iris$Sepal.Length
names(iris$Sepal.Length)
wilcox_test_to0
?wilcox.test
wilcox_test_to0(mtcars)
wilcox_test_to0 <- function( data ){
require(tidyverse)
num_data <- data %>%
select_if(is.numeric)
m <- num_data %>%
map ( unlist ) %>%
map ( as.numeric ) %>%
map ( ~round(mean(.x , na.rm = T),2) ) %>%
t %>%
t %>%
as.data.frame
o <- num_data %>%
map ( unlist ) %>%
map ( as.numeric ) %>%
map ( ~ wilcox.test( .x , mu = 0 )) %>%
map ( ~ .x$p.value ) %>%
t %>% t %>% as.data.frame
colnames(m) <- 'Mean'
colnames(o) <-'P_value'
o$Mean <- m
o$Sig  <- ifelse( o$P<0.001, '***', ifelse(o$P<0.05, '**' ,  'ns'))
o$Response <- rownames(o)
rownames(o) <- NULL
return(o %>% select(Response, Mean , Sig , P_value))
}
wilcox_test_to0(mtcars)
wilcox_test_to0 <- function( data ){
require(tidyverse)
num_data <- data %>%
select_if(is.numeric)
m <- num_data %>%
map ( unlist ) %>%
map ( as.numeric ) %>%
map ( ~round(mean(.x , na.rm = T),2) ) %>%
t %>%
t %>%
as.data.frame
o <- num_data %>%
map ( unlist ) %>%
map ( as.numeric ) %>%
map ( ~ wilcox.test( .x , rep(0,length(.x)) )) %>%
map ( ~ .x$p.value ) %>%
t %>% t %>% as.data.frame
colnames(m) <- 'Mean'
colnames(o) <-'P_value'
o$Mean <- m
o$Sig  <- ifelse( o$P<0.001, '***', ifelse(o$P<0.05, '**' ,  'ns'))
o$Response <- rownames(o)
rownames(o) <- NULL
return(o %>% select(Response, Mean , Sig , P_value))
}
wilcox_test_to0(mtcars)
wilcox_test_to0 <- function( data ){
require(tidyverse)
num_data <- data %>%
select_if(is.numeric)
m <- num_data %>%
map ( unlist ) %>%
map ( as.numeric ) %>%
map ( ~round(mean(.x , na.rm = T),2) ) %>%
t %>%
t %>%
as.data.frame
o <- num_data %>%
map ( unlist ) %>%
map ( as.numeric ) %>%
map ( ~ wilcox.test( .x , mu = 0 , paired =F) )) %>%
wilcox_test_each_other <- function( data ){
require(tidyverse)
data
}
seq(5000:5500,100)
seq(from=5000,to=5500,100)
seq(from=5000,to=5500,50)
# 產生亂數資料
riceYield<-data.frame(
'treatment' = (rep(c('A','B'),each=10) ),
'yield' = c(seq(from=5000,to=5500,50),seq(from=6000,to=6500,50)
))
# 產生亂數資料
riceYield<-data.frame(
'treatment' = (rep(c('A','B'),each=10) ),
'yield' = c(seq(from=5000,to=5450,50),seq(from=6000,to=6450,50)
))
riceYield
# 查看 後 10筆資料
tail(riceYield)
print(iris)
data.frame(
'處理' = rep(c('A','B'),each=10),
'長度' = seq(1:20)
)
(df<-data.frame(
'處理' = rep(c('A','B'),each=10),
'產量' = seq(1:20)
))
class(df)
class(df$處理)
df$處理
t(df$處理)
write.csv(data = iris, 'd:/123.csv')
write.csv(data = iris, 'd:/123.csv')
write.csv( iris, 'd:/123.csv')
bookdown::render_book('02-describe.Rmd'  ,output_format ='bookdown::gitbook',encoding='UTF-8')
bookdown::render_book('03-ttest.Rmd'  ,output_format ='bookdown::gitbook',encoding='UTF-8')
bookdown::render_book('index.Rmd'  ,output_format ='bookdown::gitbook',encoding='UTF-8')
(df<-data.frame(
'處理' = rep(c('A','B'),each=5),
'產量' = c(10,10,15,12,15,30,35,65,44,55,)
))
(df<-data.frame(
'處理' = rep(c('A','B'),each=5),
'產量' = c(10,10,15,12,15,30,35,65,44,55)
))
