'obs_name'=obs,
'treatment_name'=treatment,
p.adjust.method = as.character(p.adjust.method) ) %>% suppressWarnings}
wilcox_test_each_other(iris, Petal.Length ,Species ,'bonf')
pairwise.wilcox.test(
obs,
treatment,
p.adjust.method = as.character(p.adjust.method) ) %>% suppressWarnings}
wilcox_test_each_other(iris, Petal.Length ,Species ,'bonf')
wilcox_test_each_other <- function(data , obs , treatment , p.adjust.method){
attach(data)
obs_name = deparse(substitute(obs))
treatment_name = deparse(substitute(treatment))
data_name = deparse(substitute(data))
pairwise.wilcox.test(
obs,
treatment,
p.adjust.method = as.character(p.adjust.method) ) %>% suppressWarnings}
wilcox_test_each_other(iris, Petal.Length ,Species ,'bonf')
o<-pairwise.wilcox.test(
obs,
treatment,
p.adjust.method = as.character(p.adjust.method) ) %>% suppressWarnings
o<-pairwise.wilcox.test(
obs,
treatment,
p.adjust.method = 'bonf') ) %>% suppressWarnings
o<-pairwise.wilcox.test(
obs,
treatment,
p.adjust.method = 'bonf' ) %>% suppressWarnings
o <- pairwise.wilcox.test(df_s1$app,df_s1$line,p.adjust.method = 'bonf')
o$method
o$data.name
o$p.value
o$data.name
o$p.adjust.method
pairwise_wilcox_test(dep_var = mtcars$wt, indep_var = mtcars$cyl)
wilcox_test_each_other(iris, Petal.Length ,Species ,'bonf')
wilcox_test_each_other <- function(data , obs , treatment , p.adjust.method){
attach(data)
obs %>%  deparse(substitute(.))
treatment_name = deparse(substitute(treatment))
data_name = deparse(substitute(data))
pairwise.wilcox.test(
obs,
treatment,
p.adjust.method = as.character(p.adjust.method) ) %>% suppressWarnings
}
wilcox_test_each_other(iris, Petal.Length ,Species ,'bonf')
pairwise.wilcox.test(df_s1$app,df_s1$line,p.adjust.method = 'bonf')
o <- pairwise.wilcox.test(iris$Sepal.Length~iris$Species,p.adjust.method = 'bonf')
o <- pairwise.wilcox.test(iris$Sepal.Length~iris$Species,p.adjust.method = 'bonf')
o
o <- pairwise.wilcox.test(iris$Sepal.Length,iris$Species,p.adjust.method = 'bonf')
o
iris$Sepal.Length
names(iris$Sepal.Length)
wilcox_test_to0
?wilcox.test
wilcox_test_to0(mtcars)
wilcox_test_to0 <- function( data ){
require(tidyverse)
num_data <- data %>%
select_if(is.numeric)
m <- num_data %>%
map ( unlist ) %>%
map ( as.numeric ) %>%
map ( ~round(mean(.x , na.rm = T),2) ) %>%
t %>%
t %>%
as.data.frame
o <- num_data %>%
map ( unlist ) %>%
map ( as.numeric ) %>%
map ( ~ wilcox.test( .x , mu = 0 )) %>%
map ( ~ .x$p.value ) %>%
t %>% t %>% as.data.frame
colnames(m) <- 'Mean'
colnames(o) <-'P_value'
o$Mean <- m
o$Sig  <- ifelse( o$P<0.001, '***', ifelse(o$P<0.05, '**' ,  'ns'))
o$Response <- rownames(o)
rownames(o) <- NULL
return(o %>% select(Response, Mean , Sig , P_value))
}
wilcox_test_to0(mtcars)
wilcox_test_to0 <- function( data ){
require(tidyverse)
num_data <- data %>%
select_if(is.numeric)
m <- num_data %>%
map ( unlist ) %>%
map ( as.numeric ) %>%
map ( ~round(mean(.x , na.rm = T),2) ) %>%
t %>%
t %>%
as.data.frame
o <- num_data %>%
map ( unlist ) %>%
map ( as.numeric ) %>%
map ( ~ wilcox.test( .x , rep(0,length(.x)) )) %>%
map ( ~ .x$p.value ) %>%
t %>% t %>% as.data.frame
colnames(m) <- 'Mean'
colnames(o) <-'P_value'
o$Mean <- m
o$Sig  <- ifelse( o$P<0.001, '***', ifelse(o$P<0.05, '**' ,  'ns'))
o$Response <- rownames(o)
rownames(o) <- NULL
return(o %>% select(Response, Mean , Sig , P_value))
}
wilcox_test_to0(mtcars)
wilcox_test_to0 <- function( data ){
require(tidyverse)
num_data <- data %>%
select_if(is.numeric)
m <- num_data %>%
map ( unlist ) %>%
map ( as.numeric ) %>%
map ( ~round(mean(.x , na.rm = T),2) ) %>%
t %>%
t %>%
as.data.frame
o <- num_data %>%
map ( unlist ) %>%
map ( as.numeric ) %>%
map ( ~ wilcox.test( .x , mu = 0 , paired =F) )) %>%
wilcox_test_each_other <- function( data ){
require(tidyverse)
data
}
seq(5000:5500,100)
seq(from=5000,to=5500,100)
seq(from=5000,to=5500,50)
# 產生亂數資料
riceYield<-data.frame(
'treatment' = (rep(c('A','B'),each=10) ),
'yield' = c(seq(from=5000,to=5500,50),seq(from=6000,to=6500,50)
))
# 產生亂數資料
riceYield<-data.frame(
'treatment' = (rep(c('A','B'),each=10) ),
'yield' = c(seq(from=5000,to=5450,50),seq(from=6000,to=6450,50)
))
riceYield
# 查看 後 10筆資料
tail(riceYield)
print(iris)
data.frame(
'處理' = rep(c('A','B'),each=10),
'長度' = seq(1:20)
)
(df<-data.frame(
'處理' = rep(c('A','B'),each=10),
'產量' = seq(1:20)
))
class(df)
class(df$處理)
df$處理
t(df$處理)
write.csv(data = iris, 'd:/123.csv')
write.csv(data = iris, 'd:/123.csv')
write.csv( iris, 'd:/123.csv')
bookdown::render_book('02-describe.Rmd'  ,output_format ='bookdown::gitbook',encoding='UTF-8')
bookdown::render_book('03-ttest.Rmd'  ,output_format ='bookdown::gitbook',encoding='UTF-8')
bookdown::render_book('index.Rmd'  ,output_format ='bookdown::gitbook',encoding='UTF-8')
(df<-data.frame(
'處理' = rep(c('A','B'),each=5),
'產量' = c(10,10,15,12,15,30,35,65,44,55,)
))
(df<-data.frame(
'處理' = rep(c('A','B'),each=5),
'產量' = c(10,10,15,12,15,30,35,65,44,55)
))
knitr::opts_chunk$set(echo = TRUE)
require(agricolae)
# 建立線性模式
m1 <- lm( data=iris , Sepal.Length~Species)
# ANOVA
aov(m1)
# LSD多重比較
L1 <- LSD.test( m1 , trt = 'Species')
L1$groups
require(agricolae)
# 建立線性模式
m1 <- lm( data=iris , Sepal.Length~Species)
# ANOVA
summary(m1)
# LSD多重比較
L1 <- LSD.test( m1 , trt = 'Species')
L1$groups
require(agricolae)
# 建立線性模式
m1 <- lm( data=iris , Sepal.Length~Species)
# ANOVA
summary(aov(m1))
# LSD多重比較
L1 <- LSD.test( m1 , trt = 'Species')
L1$groups
glh1 <- glht(m1 ,
linfct = mcp(Species = cp_m))
install.packages('multcomp')
library(multcomp)
installed.packages(
)
'multcomp'%in% installed.packages()
'base'%in% installed.packages()
%in%
if ('multcomp'%in% installed.packages() == FALSE)
{install.packages('multcomp')}
library(multcomp)
summary(glh1)
# 利用rbind產生一個矩陣 cp_m
# rowname 取名為「處理因子線性對比」的係數
# 處理因子的順序則按 lm model 該 factor 的順序
cp_m <- rbind ( ' 1  se + 0ve - 1vi' = c( 1 , 0 , -1) ,
'-1.5se + 1ve - 0vi' = c( 0 , 1 , -1) )
cp_m
glh1 <- glht(m1 ,
linfct = mcp(Species = cp_m))
glh1
summary(glh1)
# 利用rbind產生一個矩陣 cp_m
# rowname 取名為「處理因子線性對比」的係數
# 處理因子的順序則按 lm model 該 factor 的順序
cp_m <- rbind ( ' 1  se + 0ve - 1vi' = c( 1 , 0 , -1) ,
'-1.5se + 1ve - 0vi' = c( -1.5 , 1 , 0) )
cp_m
glh1 <- glht(m1 ,
linfct = mcp(Species = cp_m))
glh1
summary(glh1)
glht(lmod, linfct = c("virginica - setosa = 0",
"virginica - 1.5 setosa = 0"))
glht(m1, linfct = c("virginica - setosa = 0",
"virginica - 1.5 setosa = 0"))
glht(m1, linfct = mcp( Species = c("virginica - setosa = 0",
"virginica - 1.5 setosa = 0")))
glht(m1,
linfct = mcp( Species = c(
"virginica - setosa = 0",
"virginica - 1.5 setosa = 0")
))
glht(m1,
linfct = mcp( Species = c(
"virginica - setosa = 0",
"virginica -  setosa = 0")
))
glht(m1,
linfct = mcp( Species = c(
"virginica - setosa = 0",
"virginica - 2setosa = 0")
))
glht(m1,
linfct = mcp( Species = c(
"virginica - setosa = 0",
"virginica - 1.5*setosa = 0")
))
glht(m1,
linfct = mcp( Species = c(
"virginica - setosa = 0")
))
glht(m1,
linfct = mcp( Species =
c("virginica - setosa = 0")))
coef(mtm)
coef(m1)
require(agricolae)
# 建立線性模式
m1 <- lm( data=iris , Sepal.Length~Species)
# ANOVA
summary(aov(m1))
# LSD多重比較
L1 <- LSD.test( m1 , trt = 'Species')
L1$groups
#線性模式參數
coef(m1)
require(agricolae)
# 建立線性模式
m1 <- lm( data=iris , Sepal.Length~Species)
# ANOVA
summary(aov(m1))
# LSD多重比較
L1 <- LSD.test( m1 , trt = 'Species')
L1$groups
#線性模式參數
print(coef(m1))
# 利用rbind產生一個矩陣 cp_m
# rowname 取名為「處理因子線性對比」的係數
# 處理因子的順序則按 lm model 該 factor 的順序
#線性模式參數
print(coef(m1))
cp_m <- rbind ( ' 1  se + 0ve - 1vi' = c( 1 , 0 , -1) ,
'-1.5se + 1ve - 0vi' = c( -1.5 , 1 , 0) )
cp_m
read.csv('dataset/riceHerbicide.csv')
riceHerbicide <- read.csv('dataset/riceHerbicide.csv')
require(tidyverse)
require(tidyverse)
riceHerbicide <- read.csv('dataset/riceHerbicide.csv')
riceHerbicide %>%
require(tidyverse)
riceHerbicide <- read.csv('dataset/riceHerbicide.csv')
riceHerbicide %>% str
require(magrittr)
require(tidyverse)
require(magrittr)
riceHerbicide <- read.csv('dataset/riceHerbicide.csv')
riceHerbicide %>% str
riceHerbicide %<>%
mutate(treatment , as.factor)
?mutate
riceHerbicide %<>%
mutate(treatment = as.factor(treatment),
applytime = as.factor(applytime),
rate = as.factor(rate),
rep = as.factor(rep))
riceHerbicide %<>%
mutate(treatment = as.factor(treatment),
applytime = as.factor(applytime),
rate = as.factor(rate),
rep = as.factor(rep))
riceHerbicide %>% str
riceHerbicide %>% view
require(tidyverse)
require(magrittr)
riceHerbicide <- read.csv('dataset/riceHerbicide.csv')
riceHerbicide %>% str
riceHerbicide %>% view
riceHerbicide %<>%
mutate(treatment = as.factor(treatment),
applytime = as.factor(applytime),
rate = as.factor(rate),
rep = as.factor(rep))
riceHerbicide %>% str
m2 <- lm (data = riceHerbicide , yield ~ treatment + rep )
m2 %>% anova
riceHerbicide %<>%
mutate(treatment = as.factor(treatment),
applytime = as.factor(applytime),
rate = as.factor(rate),
rep = as.factor(rep))
riceHerbicide %>% head
se<-function(x) return( sd(x)/length(x) )
riceHerbicide %>%
group_by( treatment , applytime ) %>%
summarize( across( everything, 'avg'=mean,'se'=se )
se<-function(x) return( sd(x)/length(x) )
riceHerbicide %>%
group_by( treatment , applytime ) %>%
summarize( across( everything, 'avg'=mean,'se'=se ))
se<-function(x) return( sd(x)/length(x) )
riceHerbicide %>%
group_by( treatment , applytime ) %>%
summarize( across( everything, list('avg'=mean,'se'=se )))
se<-function(x) return( sd(x)/length(x) )
riceHerbicide %>%
group_by( treatment , applytime ) %>%
summarize( across( is.numeric, list('avg'=mean,'se'=se )))
riceHerbicide %>%
group_by( treatment , applytime ) %>%
summarize( across( is.numeric, list('avg'=mean,'se'=se ))) %>%
arrange(treatment, decreasing =T)
se<-function(x) return( sd(x)/length(x) )
riceHerbicide %>%
group_by( treatment , applytime ) %>%
summarize( across( is.numeric, list('avg'=mean,'se'=se ))) %>%
arrange(treatment, decreasing =F)
se<-function(x) return( sd(x)/length(x) )
riceHerbicide %>%
group_by( treatment , applytime ) %>%
summarize( across( is.numeric, list('avg'=mean,'se'=se ))) %>%
arrange(treatment, .by_group = T)
se<-function(x) return( sd(x)/length(x) )
riceHerbicide %>%
group_by( treatment , applytime ) %>%
summarize( across( is.numeric, list('avg'=mean,'se'=se ))) %>%
se<-function(x) return( sd(x)/length(x) )
riceHerbicide %>%
group_by( treatment , applytime ) %>%
summarize( across( is.numeric, list('avg'=mean,'se'=se )))
se<-function(x) return( sd(x)/length(x) )
riceHerbicide %>%
group_by( treatment , applytime ) %>%
summarize( across( is.numeric, list('n' = length,'avg'=mean,'se'=se )))
riceHerbicide %<>%
mutate(treatment = as.factor(treatment),
applytime = as.factor(applytime),
rate = as.factor(rate),
rep = as.factor(rep))
riceHerbicide %>% map(class)
coef(m2)
riceHerbicide$treatment
# compaison: CK vs Herbicide
riceHerbicide$treatment
cfm <- rbind(
'herbide vs hand' = c( 0 , -5 , 1 , 1 , 1 , 1 , 1 ))
glht( m2,
linfct = mcp( treatment = cfm)
) %>% summary
# compaison: CK vs Herbicide
cfm <- rbind(
'herbide vs hand' = c( 0 , -5 , 1 , 1 , 1 , 1 , 1 ))
glht( m2,
linfct = mcp( treatment = cfm)
) %>% summary
# compaison: CK vs Herbicide
coef(m2)
m2 <- lm (data = riceHerbicide , yield ~ treatment + rep )
m2 %>% anova
L2 <- LSD.test(m2, trt=treatment)
L2 <- LSD.test(m2, trt=treatment)
L2 <- LSD.test(m2, trt='treatment')
L2$group
L2 <- LSD.test(m2, trt='treatment')
L2$group
L2 <- LSD.test(m2, trt='treatment')
L2$group
L2 <- LSD.test(m2, trt='treatment')
L2$group
L2 <- LSD.test(m2, trt=c('treatment','rate'))
L2$group
L2 <- LSD.test(m2, trt='treatment')
L2$group
riceHerbicide$treatment
riceHerbicide$treatment %>% levels()
# compaison: CK vs Herbicide
coef(m2)
# 因子排列順序
riceHerbicide$treatment %>% levels()
# compaison: CK vs Herbicide
# 因子排列順序
riceHerbicide$treatment %>% levels()
# 線性模式
cfm <- rbind(
'0CK -5hand + Herbicide' = c( 0 , -5 , 1 , 1 , 1 , 1 , 1 ),
'hand - Propanil/Bromoxynil' = c( 0 , 1 , 0 , 0 , 0 , 0 , 1 , 0 ),
'hand - Propanil/Ioxynil' = c( 0 , 1 , 0 , 0 , 0 , 0 , 0 , 1 ))
glht( m2,
linfct = mcp( treatment = cfm)
) %>% summary
cfm
# 線性模式
cfm <- rbind(
'0CK -5hand + Herbicide' = c( 0 , -5 , 1 , 1 , 1 , 1 , 1 ),
'hand - Propanil/Bromoxynil' = c( 0 , 1 , 0 , 0 , 0 , 0 , -1 , 0 ),
'hand - Propanil/Ioxynil' = c( 0 , 1 , 0 , 0 , 0 , 0 , 0 , -1 ))
glht( m2,
linfct = mcp( treatment = cfm)
) %>% summary
# 線性模式
cfm <- rbind(
'0CK -5hand + Herbicide' = c( 0 , -5 , 1 , 1 , 1 , 1 , 1 ))
#'hand - Propanil/Bromoxynil' = c( 0 , 1 , 0 , 0 , 0 , 0 , -1 , 0 ),
#'hand - Propanil/Ioxynil' = c( 0 , 1 , 0 , 0 , 0 , 0 , 0 , -1 ) )
glht( m2,
linfct = mcp( treatment = cfm)
) %>% summary
# 線性模式
cfm <- rbind(
'0CK -5hand + Herbicide' = c( 0 , -5 , 1 , 1 , 1 , 1 , 1 ),
'hand - Propanil/Bromoxynil' = c( 0 , 1 , 0 , 0 , 0 , 0 , -1 , 0 ))
#'hand - Propanil/Ioxynil' = c( 0 , 1 , 0 , 0 , 0 , 0 , 0 , -1 ) )
glht( m2,
linfct = mcp( treatment = cfm)
) %>% summary
# 線性模式
cfm <- rbind(
'0CK -5hand + Herbicide' = c( 0 , -5 , 1 , 1 , 1 , 1 , 1 ),
'hand - Propanil/Bromoxynil' = c( 0 , 1 , 0 , 0 , 0 , 0 , -1 , 0 ))
glht( m2,
linfct = mcp( treatment = cfm)
) %>% summary
# 線性模式
cfm <- rbind(
'0CK -5hand + Herbicide' = c( 0 , -5 , 1 , 1 , 1 , 1 , 1 ),
'hand - Propanil/Ioxynil' = c( 0 , 1 , 0 , 0 , 0 , 0 , 0 , -1 ) )
glht( m2,
linfct = mcp( treatment = cfm)
) %>% summary
# 線性模式
cfm <- rbind(
'0CK -5hand + Herbicide'     = c( 0 , -5 , 1 , 1 , 1 , 1 , 1 ),
'hand - Propanil/Bromoxynil' = c( 0 , 1  , 0 , 0 , 0 , -1, 0 ),
'hand - Propanil/Ioxynil'    = c( 0 , 1  , 0 , 0 , 0 , 0 , -1 ) )
glht( m2,
linfct = mcp( treatment = cfm)
) %>% summary
library(bookdown)
bookdown::render_book(input ="index.rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
bookdown::render_book(input ="01-intro.Rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
bookdown::render_book(input ="01-intro.Rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
bookdown::render_book(input ="01-intro.Rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
bookdown::render_book(input ="01-intro.Rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
bookdown::render_book(input ="01-intro.Rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
bookdown::render_book(input ="index.Rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
bookdown::render_book(input ="02-describe.rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
bookdown::render_book(input ="03-ttest.Rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
bookdown::render_book(input ="index.Rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
pkg = c('magrittr','ggplot2')
if ( any(pkg) %in% installed.packages() == TRUE) install.packages(pkg[!pkg %in% rownames(installed.packages())])
invisible(lapply(pkg, library, character.only = TRUE))
ggplot(data = iris, mapping = aes(x = Sepal.Length, y = Petal.Width, color = Species))+
geom_jitter()+
geom_smooth(method='lm',se=F)+
theme_bw()+
labs(x='花萼長度(cm)',
y='花瓣寬度(cm)',
color = '品種',
title = '鳶尾花花萼長與花瓣寬線性關係')
title = '鳶尾花花萼長與花瓣寬線性關係')
