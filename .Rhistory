bookdown::render_book("02-2222222222t.rmd", output_format="bookdown::gitbook", encoding="UTF-8")
bookdown::render_book("02-2222222222.rmd", output_format="bookdown::gitbook", encoding="UTF-8")
bookdown::render_book(input=".",output_format = 'bookdown::gitbook',encoding='UTF-8')
bookdown::render_book(output_format = 'bookdown::gitbook',encoding='UTF-8')
bookdown::render_book(input="index.rmd",output_format ='bookdown::gitbook',encoding='UTF-8')
bookdown::render_book(output_format = 'bookdown::gitbook',encoding='UTF-8')
qqnorm(iris$Sepal.Length)
bookdown::render_book(output_format = 'bookdown::gitbook',encoding='UTF-8')
bookdown::render_book(output_format = 'bookdown::gitbook',encoding='UTF-8')
bookdown::render_book('index.rmd',
output_format = 'bookdown::gitbook',encoding='UTF-8')
```{r}
```{r}
dir()
dir(pattern='.rmd')
dir(pattern='*.rmd')
dir(pattern='rmd')
dir(pattern=rmd)
?dir(pattern=rmd)
list.dirs(R.home("rmd"))
list.dirs("rmd")
dir(pattern='\\.dbf$')
list.dirs(pattern='\\.dbf$')
list.files(pattern='\\.dbf$')
list.files(pattern='.rmd$')
list.files(pattern='\\.rmd$')
list.files(pattern='.rmd$')
```{r}
bookdown::render_book(input="01-intro.rmd",output_format ='bookdown::gitbook',encoding='UTF-8')
``bookdown::render_book(input="01-intro.rmd",output_format ='bookdown::gitbook',encoding='UTF-8')
bookdown::render_book(input="01-intro.rmd",output_format ='bookdown::gitbook',encoding='UTF-8')
bookdown::render_book(input="02-principlesfordoe.Rmd",output_format ='bookdown::gitbook',encoding='UTF-8')
bookdown::render_book(input="08-t.Rmd",output_format ='bookdown::gitbook',encoding='UTF-8')
list.files(pattern = '.Rmd')
map( list.files(pattern = '.Rmd') , bookdown::render_book(input = . ,output_format ='bookdown::gitbook',encoding='UTF-8')
map( list.files(pattern = '.Rmd') , bookdown::render_book(input = . ,output_format ='bookdown::gitbook',encoding='UTF-8')
map( list.files(pattern = '.Rmd') , bookdown::render_book(input = . ,output_format ='bookdown::gitbook',encoding='UTF-8'))
sapply( list.files(pattern = '.Rmd') , bookdown::render_book(input = . ,output_format ='bookdown::gitbook',encoding='UTF-8')
)
tidyverse::map(list.files(pattern = '.Rmd') , bookdown::render_book(input = . ,output_format ='bookdown::gitbook',encoding='UTF-8'))
library(purrr)
map(list.files(pattern = '.Rmd') , bookdown::render_book(input = . ,output_format ='bookdown::gitbook',encoding='UTF-8'))
map(list.files(pattern = '.Rmd') , bookdown::render_book(. ,output_format ='bookdown::gitbook',encoding='UTF-8'))
map(list.files(pattern = '.Rmd') , bookdown::render_book(output_format ='bookdown::gitbook',encoding='UTF-8'))
map(list.files(pattern = '.Rmd') , bookdown::render_book(output_format ='bookdown::gitbook',encoding='UTF-8'))
bookdown::render_book(input=list.files(pattern = '.Rmd')output_format ='bookdown::gitbook',encoding='UTF-8'))
bookdown::render_book(input=list.files(pattern = '.Rmd'),output_format ='bookdown::gitbook',encoding='UTF-8'))
bookdown::render_book(input=list.files(pattern = '.Rmd'),output_format ='bookdown::gitbook',encoding='UTF-8')
list.files(pattern = '.Rmd')
lapply(list.files(pattern = '.Rmd'),)
lapply(list.files(pattern = '.Rmd'),print)
lapply(list.files(pattern = '.Rmd'),paste0)
lapply(list.files(pattern = '.Rmd'),function(x)  bookdown::render_book(input = paste0(x) ,output_format ='bookdown::gitbook',encoding='UTF-8'))
bookdown::render_book('01-intro.Rmd)
bookdown::render_book('01-intro.Rmd')
bookdown::render_book('01-intro.Rmd')
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
bookdown::render_book('__09-bookdown.rmd')
bookdown::render_book('___09-bookdown.rmd')
bookdown::render_book('___09-bookdown.rmd')bookdown::render_book(input = paste0(x) ,output_format ='bookdown::gitbook',encoding='UTF-8')
bookdown::render_book(input = paste0(x) ,output_format ='bookdown::gitbook',encoding='UTF-8')
bookdown::render_book(input = 'index.rmd' ,output_format ='bookdown::gitbook',encoding='UTF-8')
bookdown::render_book(input = '01-intro.rmd' ,output_format ='bookdown::gitbook',encoding='UTF-8')
?bookdown::bookdown_site
demo()
demo
demo(base)
demo(lm.glm)
lm.glm
demo(graphics )
demo(ggplot2)
demo(package = .packages(all.available = TRUE))
str(iris)
install.packages('tidyverse')
library(tidyverse)
plotData<-data(iris)
ggplot(data = plotData, mapping =(aes (x = Sepal.Length, y = Sepal.Width, color = Species     ))
install.packages("tidyverse")
ggplot(data = plotData, mapping =(aes (x = Sepal.Length, y = Sepal.Width, color = Species     )))+
geom_jitter()+
geom_smooth(se=FASLE)
install.packages('tidyverse')
library(tidyverse)
plotData<-data(iris)
ggplot(data = plotData, mapping =(aes (x = Sepal.Length, y = Sepal.Width, color = Species     )))+
geom_jitter()+
geom_smooth(se=FASLE)
install.packages('tidyverse')
library(tidyverse)
plotData<-data(iris) %>% as.tibble
ggplot(data = plotData, mapping =(aes (x = Sepal.Length, y = Sepal.Width, color = Species     )))+
geom_jitter()+
geom_smooth(se=FASLE)
install.packages("tidyverse")
#install.packages('tidyverse')
#library(tidyverse)
plotData<-data(iris) %>% as.tibble
#install.packages('tidyverse')
library(tidyverse)
plotData<-data(iris) %>% as.tibble
ggplot(data = plotData, mapping =(aes (x = Sepal.Length, y = Sepal.Width, color = Species     )))+
geom_jitter()+
geom_smooth()
#install.packages('tidyverse')
library(tidyverse)
plotData<-data(iris) %>% as.tibble
ggplot(data = plotData, mapping (x = Sepal.Length, y = Sepal.Width, color = Species     ))+
geom_jitter()+
geom_smooth()
?ggplot
#install.packages('tidyverse')
library(tidyverse)
plotData<-data(iris) %>% as.tibble
ggplot(data = plotData, mapping = aes(x = Sepal.Length, y = Sepal.Width, color = Species     ))+
geom_jitter()+
geom_smooth()
plotData<-data(iris) %>% as.tibble
#install.packages('tidyverse')
library(tidyverse)
data(iris) %>% as.tibble %>%
ggplot(data = ., mapping = aes(x = Sepal.Length, y = Sepal.Width, color = Species     ))+
geom_jitter()+
geom_smooth()
plotDiris
iris
#install.packages('tidyverse')
library(tidyverse)
data(iris) %>% as.tibble %>%
ggplot(data = ., mapping = aes(x = Sepal.Length, y = Sepal.Width, color = Species     ))+
geom_jitter()+
geom_smooth()
#install.packages('tidyverse')
library(tidyverse)
data(iris) %>% as.tibble %>% ggplot(data = ., mapping = aes(x = Sepal.Length, y = Sepal.Width, color = Species     ))+
geom_jitter()+
geom_smooth()
#install.packages('tidyverse')
library(tidyverse)
ggplot(data = iris, mapping = aes(x = Sepal.Length, y = Sepal.Width, color = Species     ))+
geom_jitter()+
geom_smooth()
plotData
ggplot(data = iris, mapping = aes(x = Sepal.Length, y = Sepal.Width, color = Species     ))+
geom_jitter()+
geom_smooth()+
ggplot2::theme_bw()
ggplot(data = iris, mapping = aes(x = Sepal.Length, y = Sepal.Width, color = Species     ))+
geom_jitter()+
geom_smooth()+
theme_bw()
installed.packages()
if ('tidyverse' in installed.packages()) print ('x')
if 'tidyverse' in installed.packages() print ('x')
if {'tidyverse' in installed.packages()} print ('x')
if ('tidyverse' %in% installed.packages() == TRUE) print ('x')
install.packages('tidyverse')
library(tidyverse)
ggplot(data = iris, mapping = aes(x = Sepal.Length, y = Sepal.Width, color = Species     ))+
geom_jitter()+
geom_smooth()+
theme_bw()
if (c('magrittr','ggplot2') %in% installed.packages() == TRUE) print ('x')
if ( any(c('magrittr','ggplot2')) %in% installed.packages() == TRUE) print ('x')
install.packages('tidyverse')
library(tidyverse)
ggplot(data = iris, mapping = aes(x = Sepal.Length, y = Sepal.Width, color = Species     ))+
geom_jitter()+
geom_smooth()+
theme_bw()
install.packages("tidyverse")
pkg = c('magrittr','ggplot2')
if ( any(pkg) %in% installed.packages() == TRUE) install.packages(pkg[!pkg %in% rownames(installed.packages())])
invisible(lapply(packages, library, character.only = TRUE))
pkg = c('magrittr','ggplot2')
if ( any(pkg) %in% installed.packages() == TRUE) install.packages(pkg[!pkg %in% rownames(installed.packages())])
invisible(lapply(pkg, library, character.only = TRUE))
ggplot(data = iris, mapping = aes(x = Sepal.Length, y = Sepal.Width, color = Species     ))+
geom_jitter()+
geom_smooth()+
theme_bw()
iris
str(iris)
pkg = c('magrittr','ggplot2')
if ( any(pkg) %in% installed.packages() == TRUE) install.packages(pkg[!pkg %in% rownames(installed.packages())])
invisible(lapply(pkg, library, character.only = TRUE))
ggplot(data = iris, mapping = aes(x = Sepal.Length, y = Petal.Width, color = Species))+
geom_jitter()+
geom_smooth(se=F)+
theme_bw()
pkg = c('magrittr','ggplot2')
if ( any(pkg) %in% installed.packages() == TRUE) install.packages(pkg[!pkg %in% rownames(installed.packages())])
invisible(lapply(pkg, library, character.only = TRUE))
ggplot(data = iris, mapping = aes(x = Sepal.Length, y = Petal.Width, color = Species))+
geom_jitter()+
geom_smooth(se=F)+
theme_bw()+
scale_x('123')
pkg = c('magrittr','ggplot2')
if ( any(pkg) %in% installed.packages() == TRUE) install.packages(pkg[!pkg %in% rownames(installed.packages())])
invisible(lapply(pkg, library, character.only = TRUE))
ggplot(data = iris, mapping = aes(x = Sepal.Length, y = Petal.Width, color = Species))+
geom_jitter()+
geom_smooth(se=F)+
theme_bw()+
xlab('花萼長度(cm)')+
ylab('花瓣寬度(cm)')+
lab(color = '品種')
pkg = c('magrittr','ggplot2')
if ( any(pkg) %in% installed.packages() == TRUE) install.packages(pkg[!pkg %in% rownames(installed.packages())])
invisible(lapply(pkg, library, character.only = TRUE))
ggplot(data = iris, mapping = aes(x = Sepal.Length, y = Petal.Width, color = Species))+
geom_jitter()+
geom_smooth(se=F)+
theme_bw()+
xlab('花萼長度(cm)')+
ylab('花瓣寬度(cm)')+
labs(color = '品種')
pkg = c('magrittr','ggplot2')
if ( any(pkg) %in% installed.packages() == TRUE) install.packages(pkg[!pkg %in% rownames(installed.packages())])
invisible(lapply(pkg, library, character.only = TRUE))
ggplot(data = iris, mapping = aes(x = Sepal.Length, y = Petal.Width, color = Species))+
geom_jitter()+
geom_smooth(se=F)+
theme_bw()+
xlab()+
ylab()+
labs(x='花萼長度(cm)',
y='花瓣寬度(cm)',
color = '品種',
title = '三種品種的鳶尾花長度與寬度線性關係圖')
pkg = c('magrittr','ggplot2')
if ( any(pkg) %in% installed.packages() == TRUE) install.packages(pkg[!pkg %in% rownames(installed.packages())])
invisible(lapply(pkg, library, character.only = TRUE))
ggplot(data = iris, mapping = aes(x = Sepal.Length, y = Petal.Width, color = Species))+
geom_jitter()+
geom_smooth(se=F)+
theme_bw()+
labs(x='花萼長度(cm)',
y='花瓣寬度(cm)',
color = '品種',
title = '三種品種的鳶尾花長度與寬度線性關係圖')
pkg = c('magrittr','ggplot2')
if ( any(pkg) %in% installed.packages() == TRUE) install.packages(pkg[!pkg %in% rownames(installed.packages())])
invisible(lapply(pkg, library, character.only = TRUE))
ggplot(data = iris, mapping = aes(x = Sepal.Length, y = Petal.Width, color = Species))+
geom_jitter()+
geom_smooth(se=F)+
theme_bw()+
labs(x='花萼長度(cm)',
y='花瓣寬度(cm)',
color = '品種',
title = '三種品種的鳶尾花長度與寬度線性關係圖')+
annotate("text", x = 7.5,y = 0.5,
label = "paste(italic(R) ^ 2, \" = \")", parse = TRUE)
pkg = c('magrittr','ggplot2')
if ( any(pkg) %in% installed.packages() == TRUE) install.packages(pkg[!pkg %in% rownames(installed.packages())])
invisible(lapply(pkg, library, character.only = TRUE))
ggplot(data = iris, mapping = aes(x = Sepal.Length, y = Petal.Width, color = Species))+
geom_jitter()+
geom_smooth(se=F)+
theme_bw()+
labs(x='花萼長度(cm)',
y='花瓣寬度(cm)',
color = '品種',
title = '三種品種的鳶尾花長度與寬度線性關係圖')
pkg = c('magrittr','ggplot2')
if ( any(pkg) %in% installed.packages() == TRUE) install.packages(pkg[!pkg %in% rownames(installed.packages())])
invisible(lapply(pkg, library, character.only = TRUE))
ggplot(data = iris, mapping = aes(x = Sepal.Length, y = Petal.Width, color = Species))+
geom_jitter()+
geom_smooth(se=F)+
theme_bw()+
labs(x='花萼長度(cm)',
y='花瓣寬度(cm)',
color = '品種',
title = '3種鳶尾花花萼長與花瓣寬線性關係')
pkg = c('magrittr','ggplot2')
if ( any(pkg) %in% installed.packages() == TRUE) install.packages(pkg[!pkg %in% rownames(installed.packages())])
invisible(lapply(pkg, library, character.only = TRUE))
ggplot(data = iris, mapping = aes(x = Sepal.Length, y = Petal.Width, color = Species))+
geom_jitter()+
scale_color_npg()+
geom_smooth(se=F)+
theme_bw()+
labs(x='花萼長度(cm)',
y='花瓣寬度(cm)',
color = '品種',
title = '3種鳶尾花花萼長與花瓣寬線性關係')
pkg = c('magrittr','ggplot2')
if ( any(pkg) %in% installed.packages() == TRUE) install.packages(pkg[!pkg %in% rownames(installed.packages())])
invisible(lapply(pkg, library, character.only = TRUE))
ggplot(data = iris, mapping = aes(x = Sepal.Length, y = Petal.Width, color = c('#E64B3599','#4DBBD599','#8491B499')))+
geom_jitter()+
geom_smooth(se=F)+
theme_bw()+
labs(x='花萼長度(cm)',
y='花瓣寬度(cm)',
color = '品種',
title = '3種鳶尾花花萼長與花瓣寬線性關係')
pkg = c('magrittr','ggplot2')
if ( any(pkg) %in% installed.packages() == TRUE) install.packages(pkg[!pkg %in% rownames(installed.packages())])
invisible(lapply(pkg, library, character.only = TRUE))
ggplot(data = iris, mapping = aes(x = Sepal.Length, y = Petal.Width, color = Species))+
geom_jitter(color = c('#E64B3599','#4DBBD599','#8491B499'))+
geom_smooth(color = color = c('#E64B3599','#4DBBD599','#8491B499'),se=F)+
pkg = c('magrittr','ggplot2')
if ( any(pkg) %in% installed.packages() == TRUE) install.packages(pkg[!pkg %in% rownames(installed.packages())])
invisible(lapply(pkg, library, character.only = TRUE))
ggplot(data = iris, mapping = aes(x = Sepal.Length, y = Petal.Width, color = Species))+
geom_jitter(color = c('#E64B3599','#4DBBD599','#8491B499'))+
geom_smooth(color = c('#E64B3599','#4DBBD599','#8491B499'),se=F)+
theme_bw()+
labs(x='花萼長度(cm)',
y='花瓣寬度(cm)',
color = '品種',
title = '3種鳶尾花花萼長與花瓣寬線性關係')
pkg = c('magrittr','ggplot2')
if ( any(pkg) %in% installed.packages() == TRUE) install.packages(pkg[!pkg %in% rownames(installed.packages())])
invisible(lapply(pkg, library, character.only = TRUE))
ggplot(data = iris, mapping = aes(x = Sepal.Length, y = Petal.Width, color = Species))+
geom_jitter(color = c('#E64B3599','#4DBBD599','#8491B499'))+
geom_smooth(se=F)+
theme_bw()+
labs(x='花萼長度(cm)',
y='花瓣寬度(cm)',
color = '品種',
title = '3種鳶尾花花萼長與花瓣寬線性關係')
pkg = c('magrittr','ggplot2')
if ( any(pkg) %in% installed.packages() == TRUE) install.packages(pkg[!pkg %in% rownames(installed.packages())])
invisible(lapply(pkg, library, character.only = TRUE))
ggplot(data = iris, mapping = aes(x = Sepal.Length, y = Petal.Width, color = Species))+
geom_jitter()+
geom_smooth(se=F)+
theme_bw()+
labs(x='花萼長度(cm)',
y='花瓣寬度(cm)',
color = '品種',
title = '3種鳶尾花花萼長與花瓣寬線性關係')
# 產生亂數資料
riceYield<-data.frame(
'variety' = (rep(c('A','B'),each=10) ),
'yield' = c(rnorm(n = 10 , mean = 5000 , sd = 400),rnorm(n=10 , mean = 6500 , sd = 400)
))
# 查看資料前10筆
head(riceYield)
# 查看資料前10筆
head(riceYield,10)
# 產生亂數資料
riceYield<-data.frame(
'variety' = (rep(c('A','B'),each=10) ),
'yield' = c(rnorm(n = 10 , mean = 5000 , sd = 400),rnorm(n=10 , mean = 6500 , sd = 400)
))
# 查看 前 10筆資料
head(riceYield,10)
# 查看 後 10筆資料
tail(riceYield,10)
# 產生亂數資料
riceYield<-data.frame(
'variety' = (rep(c('A','B'),each=10) ),
'yield' = c(rnorm(n = 10 , mean = 5000 , sd = 400),rnorm(n=10 , mean = 6500 , sd = 400)
))
# 查看 前 10筆資料
cat('前6筆資料')
head(riceYield)
# 查看 後 10筆資料
cat('後6筆資料')
tail(riceYield)
view(riceYield)
riceYield
print(riceYield)
t.test(riceYield)
?t.test(riceYield)
t.test(data = riceYield,
yield~variety)
t.test(data = riceYield,
yield~variety,
paired = F,
conf.level = 0.95)
t.test(data = riceYield,
yield~variety,
paired = F)
t.test(data = riceYield, # 1
yield~variety,    # 2
paired = F)       # 3
print(Riceyield)
print(riceyield)
t.test(data = riceYield, # 1
yield~variety,    # 2
paired = F)       # 3
t.test(data = riceYield, # 1
yield~variety,    # 2
paired = F)       # 3
riceYield
t.test(data = riceYield, # 1
yield~variety,    # 2
paired = F)       # 3
t.test(data = riceYield,
yield~variety,
paired = F)
?echo=TRUE
# 查看 前 10筆資料
cat('最前6筆資料')
head(riceYield)
# 查看 後 10筆資料
cat('最後6筆資料')
tail(riceYield)
cat('最前6筆資料' , head(riceYield))
cat('最前6筆資料' , paste0(head(riceYield)))
# 查看 前 10筆資料
cat('最前6筆資料')
head(riceYield)
head(riceYield)
# 查看 後 10筆資料
tail(riceYield)
?t.test
t.test(data = riceYield,
yield ~ variety,
paired = F)
t.test(data = riceYield,
yield ~ variety,
paired = F,
conf.level = 0.1)
t.test(data = riceYield,
yield ~ variety,
paired = F,
conf.level = 0.95)
t.test(data = riceYield,
yield ~ variety,
paired = F,
conf.level = 0.95,
alpha = 0.05)
t.test(data = riceYield,
yield ~ variety,
paired = F,
conf.level = 0.95,
alpha = 0.1)
t.test(data = riceYield,
yield ~ variety,
paired = F,
conf.level = 0.95,
alpha = 1)
t.test(data = riceYield,
yield ~ variety,
paired = F,
conf.level = 0.95,
alpha = 100)
t.test(data = riceYield,
yield ~ variety,
paired = F,
conf.level = 0.95,
alpha = 0.00001)
t.test(data = riceYield,
yield ~ variety,
paired = F,
conf.level = 0.95)
bookdown::render_book(input = 'index.rmd' ,output_format ='bookdown::gitbook',encoding='UTF-8')
bookdown::render_book(input = 'index.Rmd' ,output_format ='bookdown::gitbook',encoding='UTF-8')
lapply(list.files(pattern = '.Rmd'),function(x)  bookdown::render_book(input = paste0(x) ,output_format ='bookdown::gitbook',encoding='UTF-8'))
lapply(list.files(pattern = '.Rmd'),function(x)  bookdown::render_book(input = paste0(x) ,output_format ='bookdown::gitbook',encoding='UTF-8'))
library(bookdown)
library(bookdown)
:render_book(input ="01-inro.Rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
:render_book(input ="01-intro.Rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
render_book(input ="01-intro.Rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
render_book(input ="01-intro.Rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
render_book(input ="01-intro.Rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
:render_book(input ="index.Rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
render_book(input ="index.Rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
render_book(input ="02-平均值檢定.Rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
render_book(input ="02-平均值檢定.Rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
render_book(input ="index.Rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
render_book(input ="01-intro.Rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
render_book(input ="02-平均值檢定.Rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
render_book(input ="index.Rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
install.packages('bookdown')
library(bookdown)
pkg = c('magrittr','ggplot2')
if ( any(pkg) %in% installed.packages() == TRUE) install.packages(pkg[!pkg %in% rownames(installed.packages())])
invisible(lapply(pkg, library, character.only = TRUE))
ggplot(data = iris, mapping = aes(x = Sepal.Length, y = Petal.Width, color = Species))+
geom_jitter()+
geom_smooth(method='lm',se=F)+
theme_bw()+
labs(x='花萼長度(cm)',
y='花瓣寬度(cm)',
color = '品種',
title = '鳶尾花花萼長與花瓣寬線性關係')
# 產生亂數資料
riceYield<-data.frame(
'variety' = (rep(c('A','B'),each=10) ),
'yield' = c(rnorm(n = 10 , mean = 5000 , sd = 400),rnorm(n=10 , mean = 6500 , sd = 400)
))
write.csv(data=riceYield,file = 'd:/123.csv')
# 產生亂數資料
riceYield<-data.frame(
'variety' = (rep(c('A','B'),each=10) ),
'yield' = c(rnorm(n = 10 , mean = 5000 , sd = 400),rnorm(n=10 , mean = 6500 , sd = 400)
))
write.csv(riceYield,file = 'd:/123.csv')
render_book(input ="index.Rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
render_book(input ="01-intro.Rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
render_book(input ="01-intro.rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
render_book(input ="01-intro.Rmd" ,output_format ='bookdown::gitbook')
render_book(input ="01-intro.rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
render_book(input ="01-intro.rmd",
output_format ='bookdown::gitbook',encoding='UTF-8')
render_book(input ="01-intro.rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
render_book(input ="index.Rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
render_book(input ="index.Rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
render_book(input ="01-intro.rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
