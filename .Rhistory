<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
>>>>>>> 755c67710231c06fd78df9d19e08012ed38e61cb
# 取絕對值(abs)、開根號(sqrt)、四捨五入到小數點後第二位(round)、顯示前6筆
x1 <- abs(x)
x2 <- sqrt(x1)
x3 <- round(x2 , digits = 2)
head(x3)
# 產生100個隨機數字、取絕對值(abs)、開根號(sqrt)、四捨五入到小數點第二位、顯示前6筆
head(round(sqrt(abs(rnorm (100))),2))
bookdown::render_book(input ="01-intro.rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
bookdown::render_book(input ="05-GLHG.rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
bookdown::render_book(input ="05-GLHG.rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
bookdown::render_book(input ="index.rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
bookdown::render_book(input ="index.rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
bookdown::render_book(input ="index.rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
>>>>>>> 755c67710231c06fd78df9d19e08012ed38e61cb
bookdown::render_book(input ="01-intro.rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
bookdown::render_book(input ="02-describe.rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
bookdown::render_book(input ="03-ttest.rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
bookdown::render_book(input ="04-anova.rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
bookdown::render_book(input ="05-GLHG.rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
bookdown::render_book(input ="index.rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
library(inline)
pacman::p_library(inline)
install.packages(inline)
install.packages('inline')
pacman::p_library(inline)
pacman::p_library(inline)
library(inline)
seqn = cfunction(signature(n_="integer", start_="integer"),
body="
int i, n = asInteger(n_), start=asInteger(start_);
SEXP out = PROTECT(allocVector(INTSXP, n));
for(i=0; i<n; ++i){
INTEGER(out)[i]=i+start;
}
UNPROTECT(1);
return out;
")
seqn
seqn(8, 3)
fib = cfunction(c(n_="integer"), body=
"
/* Declaratations */
int n = asInteger(n_);
SEXP out = PROTECT(allocVector(INTSXP, n));
/* Function Body */
INTEGER(out)[0] = 1;
if(n > 1)  INTEGER(out)[1]=1;
if(n > 2)
{
for(int i=2; i<n; i++)
{
INTEGER(out)[i] = INTEGER(out)[i-2] + INTEGER(out)[i-1];
}
}
/* Clean up and return */
UNPROTECT(1);
return out;
")
fib(10)
seqn(8, 3)
fib(10)
add_three = cfunction(c(x="numeric"),
"
REAL(x)[0] = REAL(x)[0] + 3;
return x;
")
y <- x <- 1
add_three(x)
install.packages("Rcpp")
library(Rcpp)
install.packages("Rcpp")
install.packages("Rcpp")
int cpp_add(int x, int y, int z) {
int cpp_add(int x, int y, int z) {
int cpp_add(int x, int y, int z) {
cppFunction()
cppFunction(
int cpp_add(int x, int y, int z) {
cppFunction('int cpp_add(int x, int y, int z) {
int sum = x + y + z;
return sum;
}')
library(Rcpp)
cppFunction('int cpp_add(int x, int y, int z) {
int sum = x + y + z;
return sum;
}')
cpp_add
cpp_add(1,2)
cpp_add(1,2,3)
cppFunction('int one() {
return 1;
}')
one(2)
one()
cppFunction('std::string my_name() {
return "G. T. Wang";
}')
my_name()
# 特定線性模式
glht( m2 , linfct = mcp( treatment = 'Tukey')) %>%
summary
require(agricolae)
require(agricolae)
# 建立線性模式
m1 <- lm( data=iris , Sepal.Length~Species)
# ANOVA
summary(aov(m1))
# LSD多重比較
L1 <- LSD.test( m1 , trt = 'Species')
# ANOVA
summary(aov(m1))
# LSD多重比較
L1 <- LSD.test( m1 , trt = 'Species')
L1$groups
if ('multcomp'%in% installed.packages() == FALSE)
{install.packages('multcomp')}
{install.packages('multcomp')}
library(multcomp)
if (!'multcomp'%in% installed.packages())
{install.packages('multcomp')}
library(multcomp)
# 線性模式參數
print(coef(m1))
# 線性模式參數
print(coef(m1))
# 線性模式參數
m1 <- lm( data=iris , Sepal.Length~Species)
plot(m1)
print(coef(m1))
iris$Species
# 線性模式參數
m1 <- lm( data=iris , Sepal.Length~Species)
print(coef(m1))
cp_m <- rbind ( ' 1  se + 0ve - 1vi' = c( 1 , 0 , -1) ,
'-1.5se + 1ve - 0vi' = c( -1.5 , 1 , 0) )
cp_m
class(cp_m)
cp_m
glh1 <- glht(m1 ,
linfct = mcp(Species = cp_m))
glh1
summary(glh1)
glht(m1, linfct = mcp ( Species ))
glht(m1, linfct = mcp ( Species = 'Tukey'))
gl1<-glht(m1, linfct = mcp ( Species = 'Tukey'))
summary(gl1)
lmod <- lm(dist ~ speed, data = cars)
summary(lmod)
cftest(lmod)
cftest(m1)
sleepstudy
library(lme4)
library(lmerTest)
sleepstudy
lm(data=sleepstudy , Reaction~Days+(1|Subject) )
lm(data=sleepstudy , Reaction~Days+(1|Subject) )
lmer(data=sleepstudy , Reaction~Days+(1|Subject) )
lme4_testlevel(data=sleepstudy , Reaction~Days+(1|Subject) )
lmr(data=sleepstudy , Reaction~Days+(1|Subject) )
lmer(data=sleepstudy , Reaction~Days+(1|Subject) )
mm <- lmer(data=sleepstudy , Reaction~Days+(1|Subject) )
cftest(mm)
cftest(m1)
# 也可以直接輸入線性對比假說的數學式:
# 注意只能包含之間模型參數物件的名稱
# 用coef(mtm)檢查模型的參數值，用names(mtm$coefficients)查看有參數名稱
glht(m1,
linfct = mcp( Species =
c("virginica - setosa = 0")))
names(mtm$coefficients)
names(mtm$coefficients)
# 也可以直接輸入線性對比假說的數學式:
# 注意只能包含之間模型參數物件的名稱
# 用coef(m1)檢查模型的參數值，用names(m1$coefficients)查看有參數名稱
glht(m1,
linfct = mcp( Species =
c("virginica - setosa = 0")))
names(m1$coefficients)
library(emmeans)
fit.con=lmer(Signal~gender+age+edu+Group2*Emotion+(1|sub), data = dat.con.ROI)
library(emmeans)
fit.con=lmer(Signal~gender+age+edu+Group2*Emotion+(1|sub), data = dat.con.ROI)
data("pigs")
pigs
data("oranges")
oranges
data("MOats")
MOats
MOats
MOats
head(MOats)
data("nutrition")
nutrition
data("nutritions")
data("nutritions")
nutritions
library(emeans)
library(emmeans)
colnames(nutrition)
lm( gain~race*age ,nutrition)
m2<-lm( gain~race*age ,nutrition)
anova(m2)
m2<-lm( gain~race*age*group ,nutrition)
anova(m2)
m2<-lm( gain~race*group ,nutrition)
anova(m2)
anova(m2)
emmeans( m2 ,
list(pairwise~Group2*Emotion),
adjust='tukey')
emmeans( m2 ,
list(pairwise~group*race),
adjust='tukey')
summary(emmeans( m2 ,
list(pairwise~group*race),
adjust='tukey'))
summary(emmeans( m2 ,
list(pairwise~group*race),
adjust='tukey'))
dataset()
data()
<<<<<<< HEAD
=======
df <- read.csv('D:/senev.csv')
library(tidyverse)
library(agricolae)
library(magrittr)
df <- read.csv('D:/sen.csv')
invisible(lapply(c('tidyverse' , 'agricolae' , 'magrittr' ) , library  )
library(tidyverse)
invisible(lapply(c('tidyverse' , 'agricolae' , 'magrittr' ) , library  ))
sapply(mtcars , mean)
sapply(mtcars , list(mean,sd))
invisible(lapply( c('tidyverse' , 'agricolae' , 'magrittr' ) , library  , character.only = TRUE)))
invisible(lapply( c('tidyverse' , 'agricolae' , 'magrittr' ) , library  , character.only = TRUE)))
invisible(lapply( c('tidyverse' , 'agricolae' , 'magrittr' ) , library  , character.only = TRUE))
?character.only
??character.only
??lapply
?lapply
lapply( c('tidyverse' , 'agricolae' , 'magrittr' ) , print  , character.only = TRUE)
lapply( c('tidyverse' , 'agricolae' , 'magrittr' ) , print  , character.only = F)
lapply( c('tidyverse' , 'agricolae' , 'magrittr' ) , print  , character.only = F)
lapply( c('tidyverse' , 'agricolae' , 'magrittr' ) , print  , character.only = T)
package <- as.character(substitute(c('tidyverse' , 'agricolae' , 'magrittr' )))
as.character(substitute(c('tidyverse' , 'agricolae' , 'magrittr' )))
c('tidyverse' , 'agricolae' , 'magrittr' )
class(c('tidyverse' , 'agricolae' , 'magrittr' ))
class(as.character(substitute(c('tidyverse' , 'agricolae' , 'magrittr' ))))
substitute(c('tidyverse' , 'agricolae' , 'magrittr' )
)
?v
?substitute
bookdown::render_book(input = '01-intro.Rmd')
bookdown::render_book(input = '01-intro.Rmd' ,output_format ='bookdown::gitbook',encoding='UTF-8')
tinytex::install_tinytex()
gitbook_config(
toc_collapse = section)
library(bookdown)
gitbook_config(
toc_collapse = section)
bookdown::gitbook_config(
toc_collapse = section)
bookdown::gitbook_config(
toc_collapse = 'section')
install.packages(ymlthis)
install.packages('ymlthis')
library(ymlthis)
gitbook_config(    toc_collapse = 'section')
gitbook_config(    toolbar_position
= 'static')
bookdown::render_book(input ="01-intro.rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
yml()
?yml_toc()
?yml_blank()
yml() %>% yml_toc( toc_title = yml_blank())
yml() %>% yml_toc( toc_title = 'title'
)
(df<-data.frame(
'處理' = rep(c('A','B'),each=5),
'產量' = c(10,10,15,12,15,30,35,65,44,55)
))
x <- c('破壞死光')
cat('快龍學得會',x)
x <- c('千變萬花')
cat('\n\n快龍學得會',x)
x <- c('破壞死光')
cat('快龍學得會',x)
x <- c('千變萬花')
cat('\n\n快龍學不會',x)
# 檢查有無安裝，若無則繼續安裝套件
if('psych'%in%installed.packages() == FALSE) install.packages('psych')
# 啟用
library(psych)
pkg<-'tidyverse'
if(pkg %in% installed.packages() == F) install.packages('tidyverse')
library(tidyverse)
mtcars %>%
group_by ( vs , cyl ) %>%
summarise( across ( where( is.numeric) , list('avg'=mean, 'se'= se ))) %>%
round(digits = 2)
pkg<-'tidyverse'
if(pkg %in% installed.packages() == F) install.packages('tidyverse')
library(tidyverse)
mtcars %>%
group_by ( vs , cyl ) %>%
summarise( across ( where( is.numeric) , list('avg'=mean, 'sd'= sd ))) %>%
round(digits = 2)
pkg<-'tidyverse'
if(pkg %in% installed.packages() == F) install.packages('tidyverse')
library(tidyverse)
mtcars %>%
group_by ( vs , cyl ) %>%
summarise( across ( where( is.numeric) , list('avg'=mean, 'sd'= sd ))) %>%
round(digits = 2)
pkg<-'tidyverse'
if(pkg %in% installed.packages() == F) install.packages('tidyverse')
library(tidyverse)
mtcars %>%
group_by ( vs , cyl ) %>%
summarise( across ( where( is.numeric) , list('avg'=mean, 'sd'= sd ))) %>%
round(digits = 2)
x <- c('破壞死光')
x <- c('千變萬花')
快龍 <- c('破壞死光')
快龍的招式 <- '破壞死光'
快龍的招式 <- '千變萬花'
print(快龍)
快龍的招式 <- '破壞死光'
快龍的招式 <- '千變萬花'
print(快龍的招式)
get_template()
bookdown::get_template()
?get_template()
??get_template()
gitbook(split_bib = FALSE)
yml()
bookdown_site
bs4_book
bs4_book()
bookdown_site()
bookdown_site
?bookdown_site
ymlthis::get_yml_defaults()
ymlthis::yml_toc()
yml() %>% ymlthis::yml_toc()
yml() %>% ymlthis::yml_output()
install.packages(formatR )
install.packages('formatR')
library(formatR)
devtools::install_github("hebrewseniorlife/bookdownThemeEditor")
devtools::install_github("hebrewseniorlife/bookdownThemeEditor")
rendbookdown::render_book(input ="01-intro.rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
bookdown::render_book(input ="01-intro.rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
bookdown::render_book(input ="02-describe.rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
bookdown::render_book(input ="03-ttest.rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
bookdown::render_book(input ="04-anova.rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
bookdown::render_book(input ="05-GLHG.rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
bookdown::render_book(input ="index.rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
library(inline)
pacman::p_library(inline)
install.packages(inline)
install.packages('inline')
pacman::p_library(inline)
pacman::p_library(inline)
library(inline)
seqn = cfunction(signature(n_="integer", start_="integer"),
body="
int i, n = asInteger(n_), start=asInteger(start_);
SEXP out = PROTECT(allocVector(INTSXP, n));
for(i=0; i<n; ++i){
INTEGER(out)[i]=i+start;
}
UNPROTECT(1);
return out;
")
seqn
seqn(8, 3)
fib = cfunction(c(n_="integer"), body=
"
/* Declaratations */
int n = asInteger(n_);
SEXP out = PROTECT(allocVector(INTSXP, n));
/* Function Body */
INTEGER(out)[0] = 1;
if(n > 1)  INTEGER(out)[1]=1;
if(n > 2)
{
for(int i=2; i<n; i++)
{
INTEGER(out)[i] = INTEGER(out)[i-2] + INTEGER(out)[i-1];
}
}
/* Clean up and return */
UNPROTECT(1);
return out;
")
fib(10)
seqn(8, 3)
fib(10)
add_three = cfunction(c(x="numeric"),
"
REAL(x)[0] = REAL(x)[0] + 3;
return x;
")
y <- x <- 1
add_three(x)
install.packages("Rcpp")
library(Rcpp)
install.packages("Rcpp")
install.packages("Rcpp")
int cpp_add(int x, int y, int z) {
int cpp_add(int x, int y, int z) {
int cpp_add(int x, int y, int z) {
cppFunction()
cppFunction(
int cpp_add(int x, int y, int z) {
cppFunction('int cpp_add(int x, int y, int z) {
int sum = x + y + z;
return sum;
}')
library(Rcpp)
cppFunction('int cpp_add(int x, int y, int z) {
int sum = x + y + z;
return sum;
}')
cpp_add
cpp_add(1,2)
cpp_add(1,2,3)
cppFunction('int one() {
return 1;
}')
one(2)
one()
cppFunction('std::string my_name() {
return "G. T. Wang";
}')
my_name()
# 特定線性模式
glht( m2 , linfct = mcp( treatment = 'Tukey')) %>%
summary
require(agricolae)
require(agricolae)
# 建立線性模式
m1 <- lm( data=iris , Sepal.Length~Species)
# ANOVA
summary(aov(m1))
# LSD多重比較
L1 <- LSD.test( m1 , trt = 'Species')
# ANOVA
summary(aov(m1))
# LSD多重比較
L1 <- LSD.test( m1 , trt = 'Species')
L1$groups
if ('multcomp'%in% installed.packages() == FALSE)
{install.packages('multcomp')}
{install.packages('multcomp')}
library(multcomp)
if (!'multcomp'%in% installed.packages())
{install.packages('multcomp')}
library(multcomp)
# 線性模式參數
print(coef(m1))
# 線性模式參數
print(coef(m1))
# 線性模式參數
m1 <- lm( data=iris , Sepal.Length~Species)
plot(m1)
print(coef(m1))
iris$Species
# 線性模式參數
m1 <- lm( data=iris , Sepal.Length~Species)
print(coef(m1))
cp_m <- rbind ( ' 1  se + 0ve - 1vi' = c( 1 , 0 , -1) ,
'-1.5se + 1ve - 0vi' = c( -1.5 , 1 , 0) )
cp_m
class(cp_m)
cp_m
glh1 <- glht(m1 ,
linfct = mcp(Species = cp_m))
glh1
summary(glh1)
glht(m1, linfct = mcp ( Species ))
glht(m1, linfct = mcp ( Species = 'Tukey'))
gl1<-glht(m1, linfct = mcp ( Species = 'Tukey'))
summary(gl1)
lmod <- lm(dist ~ speed, data = cars)
summary(lmod)
cftest(lmod)
cftest(m1)
sleepstudy
library(lme4)
library(lmerTest)
sleepstudy
lm(data=sleepstudy , Reaction~Days+(1|Subject) )
lm(data=sleepstudy , Reaction~Days+(1|Subject) )
lmer(data=sleepstudy , Reaction~Days+(1|Subject) )
lme4_testlevel(data=sleepstudy , Reaction~Days+(1|Subject) )
lmr(data=sleepstudy , Reaction~Days+(1|Subject) )
lmer(data=sleepstudy , Reaction~Days+(1|Subject) )
mm <- lmer(data=sleepstudy , Reaction~Days+(1|Subject) )
cftest(mm)
cftest(m1)
# 也可以直接輸入線性對比假說的數學式:
# 注意只能包含之間模型參數物件的名稱
# 用coef(mtm)檢查模型的參數值，用names(mtm$coefficients)查看有參數名稱
glht(m1,
linfct = mcp( Species =
c("virginica - setosa = 0")))
names(mtm$coefficients)
names(mtm$coefficients)
# 也可以直接輸入線性對比假說的數學式:
# 注意只能包含之間模型參數物件的名稱
# 用coef(m1)檢查模型的參數值，用names(m1$coefficients)查看有參數名稱
glht(m1,
linfct = mcp( Species =
c("virginica - setosa = 0")))
names(m1$coefficients)
library(emmeans)
fit.con=lmer(Signal~gender+age+edu+Group2*Emotion+(1|sub), data = dat.con.ROI)
library(emmeans)
fit.con=lmer(Signal~gender+age+edu+Group2*Emotion+(1|sub), data = dat.con.ROI)
data("pigs")
pigs
data("oranges")
oranges
data("MOats")
MOats
MOats
MOats
head(MOats)
data("nutrition")
nutrition
data("nutritions")
data("nutritions")
nutritions
library(emeans)
library(emmeans)
colnames(nutrition)
lm( gain~race*age ,nutrition)
m2<-lm( gain~race*age ,nutrition)
anova(m2)
m2<-lm( gain~race*age*group ,nutrition)
anova(m2)
m2<-lm( gain~race*group ,nutrition)
anova(m2)
anova(m2)
emmeans( m2 ,
list(pairwise~Group2*Emotion),
adjust='tukey')
emmeans( m2 ,
list(pairwise~group*race),
adjust='tukey')
summary(emmeans( m2 ,
list(pairwise~group*race),
adjust='tukey'))
summary(emmeans( m2 ,
list(pairwise~group*race),
adjust='tukey'))
dataset()
data()
<<<<<<< HEAD
>>>>>>> 755c67710231c06fd78df9d19e08012ed38e61cb
=======
df <- read.csv('D:/senev.csv')
library(tidyverse)
library(agricolae)
library(magrittr)
df <- read.csv('D:/sen.csv')
invisible(lapply(c('tidyverse' , 'agricolae' , 'magrittr' ) , library  )
library(tidyverse)
invisible(lapply(c('tidyverse' , 'agricolae' , 'magrittr' ) , library  ))
sapply(mtcars , mean)
sapply(mtcars , list(mean,sd))
invisible(lapply( c('tidyverse' , 'agricolae' , 'magrittr' ) , library  , character.only = TRUE)))
invisible(lapply( c('tidyverse' , 'agricolae' , 'magrittr' ) , library  , character.only = TRUE)))
invisible(lapply( c('tidyverse' , 'agricolae' , 'magrittr' ) , library  , character.only = TRUE))
?character.only
??character.only
??lapply
?lapply
lapply( c('tidyverse' , 'agricolae' , 'magrittr' ) , print  , character.only = TRUE)
lapply( c('tidyverse' , 'agricolae' , 'magrittr' ) , print  , character.only = F)
lapply( c('tidyverse' , 'agricolae' , 'magrittr' ) , print  , character.only = F)
lapply( c('tidyverse' , 'agricolae' , 'magrittr' ) , print  , character.only = T)
package <- as.character(substitute(c('tidyverse' , 'agricolae' , 'magrittr' )))
as.character(substitute(c('tidyverse' , 'agricolae' , 'magrittr' )))
c('tidyverse' , 'agricolae' , 'magrittr' )
class(c('tidyverse' , 'agricolae' , 'magrittr' ))
class(as.character(substitute(c('tidyverse' , 'agricolae' , 'magrittr' ))))
substitute(c('tidyverse' , 'agricolae' , 'magrittr' )
)
?v
?substitute
bookdown::render_book(input = '01-intro.Rmd')
bookdown::render_book(input = '01-intro.Rmd' ,output_format ='bookdown::gitbook',encoding='UTF-8')
tinytex::install_tinytex()
gitbook_config(
toc_collapse = section)
library(bookdown)
gitbook_config(
toc_collapse = section)
bookdown::gitbook_config(
toc_collapse = section)
bookdown::gitbook_config(
toc_collapse = 'section')
install.packages(ymlthis)
install.packages('ymlthis')
library(ymlthis)
gitbook_config(    toc_collapse = 'section')
gitbook_config(    toolbar_position
= 'static')
bookdown::render_book(input ="01-intro.rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
yml()
?yml_toc()
?yml_blank()
yml() %>% yml_toc( toc_title = yml_blank())
yml() %>% yml_toc( toc_title = 'title'
)
(df<-data.frame(
'處理' = rep(c('A','B'),each=5),
'產量' = c(10,10,15,12,15,30,35,65,44,55)
))
x <- c('破壞死光')
cat('快龍學得會',x)
x <- c('千變萬花')
cat('\n\n快龍學得會',x)
x <- c('破壞死光')
cat('快龍學得會',x)
x <- c('千變萬花')
cat('\n\n快龍學不會',x)
# 檢查有無安裝，若無則繼續安裝套件
if('psych'%in%installed.packages() == FALSE) install.packages('psych')
# 啟用
library(psych)
pkg<-'tidyverse'
if(pkg %in% installed.packages() == F) install.packages('tidyverse')
library(tidyverse)
mtcars %>%
group_by ( vs , cyl ) %>%
summarise( across ( where( is.numeric) , list('avg'=mean, 'se'= se ))) %>%
round(digits = 2)
pkg<-'tidyverse'
if(pkg %in% installed.packages() == F) install.packages('tidyverse')
library(tidyverse)
mtcars %>%
group_by ( vs , cyl ) %>%
summarise( across ( where( is.numeric) , list('avg'=mean, 'sd'= sd ))) %>%
round(digits = 2)
pkg<-'tidyverse'
if(pkg %in% installed.packages() == F) install.packages('tidyverse')
library(tidyverse)
mtcars %>%
group_by ( vs , cyl ) %>%
summarise( across ( where( is.numeric) , list('avg'=mean, 'sd'= sd ))) %>%
round(digits = 2)
pkg<-'tidyverse'
if(pkg %in% installed.packages() == F) install.packages('tidyverse')
library(tidyverse)
mtcars %>%
group_by ( vs , cyl ) %>%
summarise( across ( where( is.numeric) , list('avg'=mean, 'sd'= sd ))) %>%
round(digits = 2)
x <- c('破壞死光')
x <- c('千變萬花')
快龍 <- c('破壞死光')
快龍的招式 <- '破壞死光'
快龍的招式 <- '千變萬花'
print(快龍)
快龍的招式 <- '破壞死光'
快龍的招式 <- '千變萬花'
print(快龍的招式)
get_template()
bookdown::get_template()
?get_template()
??get_template()
gitbook(split_bib = FALSE)
yml()
bookdown_site
bs4_book
bs4_book()
bookdown_site()
bookdown_site
?bookdown_site
ymlthis::get_yml_defaults()
ymlthis::yml_toc()
yml() %>% ymlthis::yml_toc()
yml() %>% ymlthis::yml_output()
install.packages(formatR )
install.packages('formatR')
library(formatR)
devtools::install_github("hebrewseniorlife/bookdownThemeEditor")
devtools::install_github("hebrewseniorlife/bookdownThemeEditor")
rendbookdown::render_book(input ="01-intro.rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
bookdown::render_book(input ="01-intro.rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
bookdown::render_book(input ="02-describe.rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
bookdown::render_book(input ="03-ttest.rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
bookdown::render_book(input ="04-anova.rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
bookdown::render_book(input ="05-GLHG.rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
bookdown::render_book(input ="index.rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
library(inline)
pacman::p_library(inline)
install.packages(inline)
install.packages('inline')
pacman::p_library(inline)
pacman::p_library(inline)
library(inline)
seqn = cfunction(signature(n_="integer", start_="integer"),
body="
int i, n = asInteger(n_), start=asInteger(start_);
SEXP out = PROTECT(allocVector(INTSXP, n));
for(i=0; i<n; ++i){
INTEGER(out)[i]=i+start;
}
UNPROTECT(1);
return out;
")
seqn
seqn(8, 3)
fib = cfunction(c(n_="integer"), body=
"
/* Declaratations */
int n = asInteger(n_);
SEXP out = PROTECT(allocVector(INTSXP, n));
/* Function Body */
INTEGER(out)[0] = 1;
if(n > 1)  INTEGER(out)[1]=1;
if(n > 2)
{
for(int i=2; i<n; i++)
{
INTEGER(out)[i] = INTEGER(out)[i-2] + INTEGER(out)[i-1];
}
}
/* Clean up and return */
UNPROTECT(1);
return out;
")
fib(10)
seqn(8, 3)
fib(10)
add_three = cfunction(c(x="numeric"),
"
REAL(x)[0] = REAL(x)[0] + 3;
return x;
")
y <- x <- 1
add_three(x)
install.packages("Rcpp")
library(Rcpp)
install.packages("Rcpp")
install.packages("Rcpp")
int cpp_add(int x, int y, int z) {
int cpp_add(int x, int y, int z) {
int cpp_add(int x, int y, int z) {
cppFunction()
cppFunction(
int cpp_add(int x, int y, int z) {
cppFunction('int cpp_add(int x, int y, int z) {
int sum = x + y + z;
return sum;
}')
library(Rcpp)
cppFunction('int cpp_add(int x, int y, int z) {
int sum = x + y + z;
return sum;
}')
cpp_add
cpp_add(1,2)
cpp_add(1,2,3)
cppFunction('int one() {
return 1;
}')
one(2)
one()
cppFunction('std::string my_name() {
return "G. T. Wang";
}')
my_name()
# 特定線性模式
glht( m2 , linfct = mcp( treatment = 'Tukey')) %>%
summary
require(agricolae)
require(agricolae)
# 建立線性模式
m1 <- lm( data=iris , Sepal.Length~Species)
# ANOVA
summary(aov(m1))
# LSD多重比較
L1 <- LSD.test( m1 , trt = 'Species')
# ANOVA
summary(aov(m1))
# LSD多重比較
L1 <- LSD.test( m1 , trt = 'Species')
L1$groups
if ('multcomp'%in% installed.packages() == FALSE)
{install.packages('multcomp')}
{install.packages('multcomp')}
library(multcomp)
if (!'multcomp'%in% installed.packages())
{install.packages('multcomp')}
library(multcomp)
# 線性模式參數
print(coef(m1))
# 線性模式參數
print(coef(m1))
# 線性模式參數
m1 <- lm( data=iris , Sepal.Length~Species)
plot(m1)
print(coef(m1))
iris$Species
# 線性模式參數
m1 <- lm( data=iris , Sepal.Length~Species)
print(coef(m1))
cp_m <- rbind ( ' 1  se + 0ve - 1vi' = c( 1 , 0 , -1) ,
'-1.5se + 1ve - 0vi' = c( -1.5 , 1 , 0) )
cp_m
class(cp_m)
cp_m
glh1 <- glht(m1 ,
linfct = mcp(Species = cp_m))
glh1
summary(glh1)
glht(m1, linfct = mcp ( Species ))
glht(m1, linfct = mcp ( Species = 'Tukey'))
gl1<-glht(m1, linfct = mcp ( Species = 'Tukey'))
summary(gl1)
lmod <- lm(dist ~ speed, data = cars)
summary(lmod)
cftest(lmod)
cftest(m1)
sleepstudy
library(lme4)
library(lmerTest)
sleepstudy
lm(data=sleepstudy , Reaction~Days+(1|Subject) )
lm(data=sleepstudy , Reaction~Days+(1|Subject) )
lmer(data=sleepstudy , Reaction~Days+(1|Subject) )
lme4_testlevel(data=sleepstudy , Reaction~Days+(1|Subject) )
lmr(data=sleepstudy , Reaction~Days+(1|Subject) )
lmer(data=sleepstudy , Reaction~Days+(1|Subject) )
mm <- lmer(data=sleepstudy , Reaction~Days+(1|Subject) )
cftest(mm)
cftest(m1)
# 也可以直接輸入線性對比假說的數學式:
# 注意只能包含之間模型參數物件的名稱
# 用coef(mtm)檢查模型的參數值，用names(mtm$coefficients)查看有參數名稱
glht(m1,
linfct = mcp( Species =
c("virginica - setosa = 0")))
names(mtm$coefficients)
names(mtm$coefficients)
# 也可以直接輸入線性對比假說的數學式:
# 注意只能包含之間模型參數物件的名稱
# 用coef(m1)檢查模型的參數值，用names(m1$coefficients)查看有參數名稱
glht(m1,
linfct = mcp( Species =
c("virginica - setosa = 0")))
names(m1$coefficients)
library(emmeans)
fit.con=lmer(Signal~gender+age+edu+Group2*Emotion+(1|sub), data = dat.con.ROI)
library(emmeans)
fit.con=lmer(Signal~gender+age+edu+Group2*Emotion+(1|sub), data = dat.con.ROI)
data("pigs")
pigs
data("oranges")
oranges
data("MOats")
MOats
MOats
MOats
head(MOats)
data("nutrition")
nutrition
data("nutritions")
data("nutritions")
nutritions
library(emeans)
library(emmeans)
colnames(nutrition)
lm( gain~race*age ,nutrition)
m2<-lm( gain~race*age ,nutrition)
anova(m2)
m2<-lm( gain~race*age*group ,nutrition)
anova(m2)
m2<-lm( gain~race*group ,nutrition)
anova(m2)
anova(m2)
emmeans( m2 ,
list(pairwise~Group2*Emotion),
adjust='tukey')
emmeans( m2 ,
list(pairwise~group*race),
adjust='tukey')
summary(emmeans( m2 ,
list(pairwise~group*race),
adjust='tukey'))
summary(emmeans( m2 ,
list(pairwise~group*race),
adjust='tukey'))
dataset()
data()
>>>>>>> 755c67710231c06fd78df9d19e08012ed38e61cb
Glycoalkaloids
Glycoalkaloids
data(Glycoalkaloids              )
Glycoalkaloids
data(CIC)
CIC
data(corn)
corn
data(soil)
soil
data(IR8)
IR8
data(riceIR8)
library(agridat)
install.packages('agridat')
library(agridat)
data(adugna.sorghum)
dat <- adugna.sorghum
dat
libs(lattice)
libs()
tapply(dat$yield, dat$gen, mean)
tapply(dat)
dat
tapply(day$yield , dat$trial , mean)
tapply(dat$yield , dat$trial , mean)
tapply(dat$yield , dat$trial , list(mean,sd))
vapply(DAT, sum, matrix(18))
vapply(dat, sum, matrix(18))
vapply(dat$yield, sum, matrix(18))
iris[which(iris$Sepal.Length)==1]
iris[which(iris$Sepal.Length)==1,]
iris[which(iris$Sepal.Length==1),]
iris[which(iris$Sepal.Length>1),]
which(iris$Sepal.Length)>2
which(iris$Sepal.Length>2)
pkg <- 'ggplot2'
pkg %in% installed.packages()
!pkg %in% installed.packages()
cppFunction('std::string my_name() {
return "G. T. Wang";
}')
my_name()
# ANOVA
pkgs<-c( 'agricolae', 'tidyverse' )
if( !pkgs %in% installed.packages()){install.packages(pkgs)}
pkgs
installed.packages()
if( !pkgs %in% rownames(installed.packages())){install.packages(pkgs)}
if( any(!pkgs %in% installed.packages())){install.packages(pkgs)}
any(!pkgs %in% installed.packages())
any(pkgs %in% installed.packages())
lapply(pkgs, library, character.only=TRUE)
invisible(lapply(pkgs, library, character.only=TRUE))
#2
data(agricolae)
#2
data('agricolae')
#2
dataset(agricolae)
#2
dataset('agricolae')
data()
data(plots)
plots
return(dd)}
dd<-function(x){
data(x)
return(x)}
dd(plots)
dd<-function(x){
x<-substitute(x)
data(x)
return(x)}
dd(plots)
sunbstitute(x)
substitute(x)
paste0(substitute(x))
dd<-function(x){
x<-paste0(substitute(x))
data(x)
return(x)}
dd(plots)
data(paste0((x))
return(x)}
dd<-function(x){
dd<-function(x){
dd<-function(x){
x<-paste0(substitute(x))
data(paste0(x))
return(x)}
}
## linear model
}
dd<-function(x){
x<-paste0(substitute(x))
data(paste0(x))
return(x)}
dd(plots)
data('corn')
corn
data('cotton')
cotton
data('LxT')
LxT
<<<<<<< HEAD
<<<<<<< HEAD
qqnorm(iris$Sepal.Length)
abline(y = x)
qqnorm(iris$Sepal.Length)
abline()
m <- lm(Sepal.Length~Species, iris)
plot(m$residuals)
plot(m)
leveneTest
library(car)
leveneTest
library(MASS)
box.cox()
boxCox()
?boxCox()
with(trees, boxCox(Volume ~ log(Height) + log(Girth), data = trees,
lambda = seq(-0.25, 0.25, length = 10)))
MASS::boxcox()
boxcox()
?boxcox()
ggplot
levene.test
levene.test(mtcars$drat)
leveneTest(mtcars)
leveneTest
?leveneTest
leveneTest(mtcars$disp)
leveneTest(mtcars$disp~mtcars$hp)
leveneTest(mtcars$disp~mtcars$vs)
leveneTest(iris$Sepal.Length~iris$Species
)
leveneTest(iris$Sepal.Length~iris$Species)
leveneTest(iris$Sepal.Length~iris$Species)
m<-leveneTest(iris$Sepal.Length~iris$Species)
m$`Pr(>F)`
leveneTest(iris$Sepal.Length~iris$Species)
bartlett.test(iris$Sepal.Length~iris$Species)
mulcomp
library(tidyverse)
pkgs %in% installed.packages()
pkgs <- c('car','MASS','magritti','tidyverse','lmer','multcomp','agricolae','dplyr','lsmeans','psych')
pkgs %in% installed.packages()
pkgs <- c('car','MASS','magrittr','tidyverse','lme4','lmerTest','multcomp','agricolae','dplyr','lsmeans','psych')
pkgs %in% installed.packages()
any(pkgs %in% installed.packages())
pkgs <- c('car','MASS','magrittr','tidyverse','lme4','lmerTest','multcomp','agricolae','dplyr','lsmeans','psych')
if (!any(pkgs %in% installed.packages())) {install.packages(pkgs[!pkgs %in% installed.packages()])}
invisible(lapply(pkgs , library , character.only=TRUE))
pkgs <- c('car','MASS','magrittr','tidyverse','lme4','lmerTest','multcomp','agricolae','dplyr','lsmeans','emmeans','psych')
if (!any(pkgs %in% installed.packages())) {install.packages(pkgs[!pkgs %in% installed.packages()])}
invisible(lapply(pkgs , library , character.only=TRUE))
boxcox(Sepal.Length)
boxcox(Sepal.Length~. , data = iris)
o <- boxcox(Sepal.Length~. , data = iris)
o <- invisible(boxcox(Sepal.Length~. , data = iris))
o <- boxcox(Sepal.Length~. , data = iris)
o$
```
o$x
o$y
summary(o)
o$x[which.max(o$y)]
o$x
[which.max(o$y)]
which.max(o$y)
o$y
which.max(o$y)
o$y
which.max
?which.max
lamDa
o <- boxcox(Sepal.Length~. , data = iris)
lamDa <- o$x[which.max(o$y)]
lamDa
SP_BoxCox<-function(data , y ){
data_y<-unlist(as.vector( select_if(data_trans[yvar_name],is.numeric)),use.names = F)
shapiro_out <- shapiro.test(data_y)
if (shapiro_out$p.value < 0.05) {
cat('\n The variable',paste0("'",yvar_name,"'"),'is not normality.\n')
require(MASS)
forMu <- formula( paste0(as.character(yvar_name),'~1'))
bc    <- boxcox(forMu,data = data_trans)
lambda<- bc$x[which.max(bc$y)]
if (lambda != 0){
newy <- (data_y^(lambda)-1)/lambda
print(newy)
}else if(lambda == 0 ){
newy <- log(data_y)
print(newy)}}
else if(shapiro_out$p.value >= 0.05){
cat('The variable',paste0("'",yvar_name,"'"), 'is normality.\nReturning original data.\n')
return(data_y)}
}
SP_BoxCox(iris$Sepal.Length)
SP_BoxCox<-function(data , y ){
data_y<-unlist(as.vector( select_if(data[y],is.numeric)),use.names = F)
shapiro_out <- shapiro.test(data_y)
if (shapiro_out$p.value < 0.05) {
cat('\n The variable',paste0("'",y,"'"),'is not normality.\n')
require(MASS)
forMu <- formula( paste0(as.character(y),'~1'))
bc    <- boxcox(forMu,data = data)
lambda<- bc$x[which.max(bc$y)]
if (lambda != 0){
newy <- (data_y^(lambda)-1)/lambda
print(newy)
}else if(lambda == 0 ){
newy <- log(data_y)
print(newy)}}
else if(shapiro_out$p.value >= 0.05){
cat('The variable',paste0("'",y,"'"), 'is normality.\nReturning original data.\n')
return(data_y)}
}
SP_BoxCox(iris$Sepal.Length)
SP_BoxCox<-function(data , y){
require(tidyverse)
data_y<-unlist(as.vector(select_if(data[y],is.numeric)),use.names = F)
shapiro_out <- data_y %>% shapiro.test()
if (shapiro_out$p.value < 0.05) {
cat('\n The variable',paste0("'",y,"'"),'is not normality.\n')
require(MASS)
forMu <- formula( paste0(as.character(y),'~1'))
bc    <- boxcox(forMu,data = data)
lambda<- bc$x[which.max(bc$y)]
if (lambda != 0){
newy <- (data_y^(lambda)-1)/lambda
print(newy)
}else if(lambda == 0 ){
newy <- log(data_y)
print(newy)}}
else if(shapiro_out$p.value >= 0.05){
cat('The variable',paste0("'",y,"'"), 'is normality.\nReturning original data.\n')
return(data_y)}
}
SP_BoxCox(iris$Sepal.Length)
SP_BoxCox(iris,'Sepal.Length')
nboxcox(iris,'Sepal.Length')
nboxcox<-function(data , y){
require(tidyverse)
data_y<-unlist(as.vector(select_if(data[y],is.numeric)),use.names = F)
shapiro_out <- data_y %>% shapiro.test()
if (shapiro_out$p.value < 0.05) {
cat('\n The variable',paste0("'",y,"'"),'is not normality.\n')
require(MASS)
forMu <- formula( paste0(as.character(y),'~1'))
bc    <- boxcox(forMu,data = data)
lambda<- bc$x[which.max(bc$y)]
if (lambda != 0){
newy <- (　data_y^(lambda)　-1)/lambda
print(newy)
}else if(lambda == 0 ){
newy <- log(data_y)
print(newy)}}
else if(shapiro_out$p.value >= 0.05){
cat('The variable',paste0("'",y,"'"), 'is normality.\nReturning original data.\n')
return(data_y)}
}
nboxcox(iris,'Sepal.Length')
box.cox(iris$Sepal.Length~1)
box.cox(iris$Sepal.Length~.)
boxcox(iris$Sepal.Length~.)
boxcox(iris$Sepal.Length~.,data=iris)
which.max(boxcox(iris$Sepal.Length~.,data=iris)$y)
boxcox(iris$Sepal.Length~.,data=iris)$x[which.max(boxcox(iris$Sepal.Length~.,data=iris)$y)]
boxcox(iris$Sepal.Length~.,data=iris)$y
boxcox(iris$Sepal.Length~.,data=iris)$x
?boxcox
y=c(1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 6, 7, 8)
x=c(7, 7, 8, 3, 2, 4, 4, 6, 6, 7, 5, 3, 3, 5, 8)
#fit linear regression model
model <- lm(y~x)
#find optimal lambda for Box-Cox transformation
bc <- boxcox(y ~ x)
(lambda <- bc$x[which.max(bc$y)])
[1] -0.4242424
# Box-Cox transform
nboxcox<-function(data , y){
require(tidyverse)
data_y<-unlist(as.vector(select_if(data[y],is.numeric)),use.names = F)
shapiro_out <- data_y %>% shapiro.test()
if (shapiro_out$p.value < 0.05) {
cat('\n The variable',paste0("'",y,"'"),'is not normality.\n')
require(MASS)
forMu <- formula( paste0(as.character(y),'~1'))
bc    <- boxcox(forMu,data = data)
lambda<- bc$x[which.max(bc$y)]
if (lambda != 0){
newy <- (　data_y^(lambda)　-1)/lambda
print(newy)
}else if(lambda == 0 ){
newy <- log(data_y)
print(newy)}}
else if(shapiro_out$p.value >= 0.05){
cat('The variable',paste0("'",y,"'"), 'is normality.\nReturning original data.\n')
return(data_y)}
}
# 範例
nboxcox(iris,'Sepal.Length')
bookdown::render_book(input ="01-intro.rmd" ,output_format ='bookdown::gitbook',encoding='UTF-8')
install.packages('formatR')
=======
>>>>>>> 755c67710231c06fd78df9d19e08012ed38e61cb
=======
>>>>>>> 755c67710231c06fd78df9d19e08012ed38e61cb
