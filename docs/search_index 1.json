[["index.html", "R Cookbook for Agricultural Research 第 1 章 關於", " R Cookbook for Agricultural Research 李誠紘 Cheng Hong, Li 2022-12-20 第 1 章 關於 這是一本關於統計程式語言 R 的筆記，記錄農業試驗研究上使用的R程式。 "],["這是什麼.html", "第 2 章 這是什麼?", " 第 2 章 這是什麼? 這是一個利用 R bookdown 撰寫，部屬在Github Page上的電子書。 這是一個用R來做試驗設計與分析的學習筆記，程式碼的速查本，包含農業研究常用的試驗設計學的 R 程式語言，要讀懂這本書，基礎的試驗設計學知識是必須的。 本書使用到的套件，複製到R環境執行即完成安裝與啟用： pkgs &lt;- c(&#39;car&#39;,&#39;MASS&#39;,&#39;magrittr&#39;,&#39;tidyverse&#39;,&#39;lme4&#39;,&#39;lmerTest&#39;,&#39;multcomp&#39;,&#39;agricolae&#39;,&#39;dplyr&#39;,&#39;lsmeans&#39;,&#39;emmeans&#39;,&#39;psych&#39;) if (!any(pkgs %in% installed.packages())) {install.packages(pkgs[!pkgs %in% installed.packages()])} invisible(lapply(pkgs , library , character.only=TRUE)) 本書的R版本 ## R version 4.2.2 (2022-10-31 ucrt) ## Platform: x86_64-w64-mingw32/x64 (64-bit) ## Running under: Windows 10 x64 (build 19045) ## ## Matrix products: default ## ## locale: ## [1] LC_COLLATE=Chinese (Traditional)_Taiwan.utf8 ## [2] LC_CTYPE=Chinese (Traditional)_Taiwan.utf8 ## [3] LC_MONETARY=Chinese (Traditional)_Taiwan.utf8 ## [4] LC_NUMERIC=C ## [5] LC_TIME=Chinese (Traditional)_Taiwan.utf8 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] knitr_1.40 formatR_1.12 psych_2.2.9 lmerTest_3.1-3 ## [5] lme4_1.1-31 Matrix_1.5-3 car_3.1-1 carData_3.0-5 ## [9] multcomp_1.4-20 TH.data_1.1-1 MASS_7.3-58.1 survival_3.4-0 ## [13] mvtnorm_1.1-3 agricolae_1.3-5 magrittr_2.0.3 forcats_0.5.2 ## [17] stringr_1.4.1 dplyr_1.0.10 purrr_0.3.5 readr_2.1.3 ## [21] tidyr_1.2.1 tibble_3.1.8 ggplot2_3.4.0 tidyverse_1.3.2 ## [25] lsmeans_2.30-0 emmeans_1.8.3 ## ## loaded via a namespace (and not attached): ## [1] googledrive_2.0.0 minqa_1.2.5 colorspace_2.0-3 ## [4] ellipsis_0.3.2 rsconnect_0.8.28 estimability_1.4.1 ## [7] fs_1.5.2 rstudioapi_0.14 farver_2.1.1 ## [10] fansi_1.0.3 lubridate_1.9.0 xml2_1.3.3 ## [13] codetools_0.2-18 splines_4.2.2 mnormt_2.1.1 ## [16] cachem_1.0.6 jsonlite_1.8.3 nloptr_2.0.3 ## [19] broom_1.0.1 cluster_2.1.4 dbplyr_2.2.1 ## [22] shiny_1.7.3 compiler_4.2.2 httr_1.4.4 ## [25] backports_1.4.1 assertthat_0.2.1 fastmap_1.1.0 ## [28] gargle_1.2.1 cli_3.4.1 later_1.3.0 ## [31] htmltools_0.5.3 tools_4.2.2 coda_0.19-4 ## [34] gtable_0.3.1 glue_1.6.2 Rcpp_1.0.9 ## [37] cellranger_1.1.0 jquerylib_0.1.4 vctrs_0.5.0 ## [40] nlme_3.1-160 xfun_0.34 rvest_1.0.3 ## [43] timechange_0.1.1 mime_0.12 miniUI_0.1.1.1 ## [46] lifecycle_1.0.3 googlesheets4_1.0.1 zoo_1.8-11 ## [49] scales_1.2.1 hms_1.1.2 promises_1.2.0.1 ## [52] parallel_4.2.2 sandwich_3.0-2 thematic_0.1.2.1 ## [55] yaml_2.3.6 sass_0.4.2 labelled_2.10.0 ## [58] stringi_1.7.8 highr_0.9 klaR_1.7-1 ## [61] AlgDesign_1.2.1 boot_1.3-28 rlang_1.0.6 ## [64] pkgconfig_2.0.3 evaluate_0.18 lattice_0.20-45 ## [67] labeling_0.4.2 tidyselect_1.2.0 bookdown_0.30 ## [70] R6_2.5.1 generics_0.1.3 combinat_0.0-8 ## [73] DBI_1.1.3 mgcv_1.8-41 pillar_1.8.1 ## [76] haven_2.5.1 withr_2.5.0 abind_1.4-5 ## [79] modelr_0.1.10 crayon_1.5.2 questionr_0.7.7 ## [82] utf8_1.2.2 tzdb_0.3.0 rmarkdown_2.18 ## [85] grid_4.2.2 readxl_1.4.1 reprex_2.0.2 ## [88] digest_0.6.30 xtable_1.8-4 httpuv_1.6.6 ## [91] numDeriv_2016.8-1.1 munsell_0.5.0 bslib_0.4.1 "],["為什麼要用r.html", "第 3 章 為什麼要用R?", " 第 3 章 為什麼要用R? 以下引用Advanced R的Why R說明使用R的好理由: R完全免費而且開源。 R的社群相當多元而且樂於討論。 R有大量的統計分析、機器學習、數據視覺化、資料整理套件，任何想做的分析，幾乎已有人寫好程式碼與教學。 R也有工具可以分享結果，例如RMarkdown可以將資料分析結果輸出成文件、簡報、動態網頁；Shiny可以製作精美的互動網站。 R包含最先進的統計分析與機器學習工具，而且不斷進化。 RStudio公司開發好用的R工具並販售，然而，現在已經將獲利逐漸回饋給R的公共社群。其中50%的工程師在RStudio做的是開放原始碼的專案。 R學習難度低、上限高，甚至可以在R中利用C、Fortran、C++語言加速程式執行流程。 但R也有缺點，例如 多數R使用者並非專業軟體工程師，許多野生的R程式碼都是為了快速解決問題而寫，不優美而且難懂。 R的社群更專注在分析過程及結果，對達成軟體工程的知識實踐是零散的。例如沒有足夠多的R程序員使用源代碼控制(source code control)或自動化測試(automated testing)。 太多的 R 函數使用技巧來減少輸入程式碼，導致程式碼難以理解，並且可能以意想不到的方式失敗。 R 的程式語言包(packages)品質不一，有太多的特殊情況需要記住，導致每次使用 R ，你都會面臨超過 25 年的演變，這會使學習 R 變得困難。 相較其他程式語言，R 執行效率低而且耗用電腦資源，糟糕的 R 程式碼可能會執行速度很慢。 如果統計程式是一台車 from reddit "],["下載與安裝r.html", "3.1 下載與安裝R", " 3.1 下載與安裝R 下載與安裝 R RStudio R是必須要安裝的，否則沒辦法使用。RStudio則是R語言的”整合開發環境’ (Integrated Development Environment, IDE)。這裡有更詳細的RStudio環境介紹。 "],["第一個-r-程式碼.html", "3.2 第一個 R 程式碼", " 3.2 第一個 R 程式碼 複製下面程式碼，貼上至R console，按下Enter；或是在 RStudio 中開啟新的script，貼上程式碼將輸入游標在同一行按Ctrl+Enter。 這是你的第一個R程式碼，嗨，世界! print(&#39;Hello world!&#39;) ## [1] &quot;Hello world!&quot; 以下章節都會包含程式碼 (上方灰框) 與執行結果 (下方灰框)，可以直接複製程式碼，貼上在 R 介面中執行。 你會發現，R很像是Google助理，輸入一行指令，執行後就會返回一行結果，這種一來一往式的程式語言叫做直譯語言 (Interpreted Language)。但一段 R 的程式碼可能會有很多行，譬如下面畫圖的函數，就包含許多行程式碼。 "],["第一張圖.html", "3.3 第一張圖", " 3.3 第一張圖 你可以將下面程式碼複製後，整個貼到你的RStudio介面或是R中執行，畫出你的第一張圖： pkg &lt;- &#39;ggplot2&#39; if ( !pkg %in% installed.packages()) install.packages(pkg) library(ggplot2) ggplot(data = iris, mapping = aes(x = Sepal.Length, y = Petal.Width, color = Species))+ geom_jitter()+ geom_smooth(method=&#39;lm&#39;,se=F)+ theme_bw()+ labs(x=&#39;花萼長度(cm)&#39;, y=&#39;花瓣寬度(cm)&#39;, color = &#39;品種&#39;, title = &#39;鳶尾花花萼長與花瓣寬線性關係&#39;) 上面是利用內建資料iris畫成的圖，只要學會使用ggplot2套件，不同類型的資料也能畫出好看又專業的圖。 像這樣的資料集有非常多已經內建在R程式中，我們稱為範例資料集，可以用data()查看可利用那些資料。 "],["學習地圖roadmap.html", "3.4 學習地圖(Roadmap)", " 3.4 學習地圖(Roadmap) 現在許多R的教程會直接建議從{tidyverse}學起，譬如以下這篇訪問，RStudio創辦人 J.J. Allaire(簡稱JJ)接受 Joseph B. Rickert(簡稱JBR)訪問也提到這一點。 JBR: 對於初次接觸 R 的人，您有什麼建議嗎？無論是學生、經驗豐富的統計學家還是研究人員？ JJ: 我會建議他們練習一下 Hadley Wickham 和 Garrett Grolemund 在 “R for Data Science” 這本書中的寫的 R 程式碼。這本書詳細說明了在 R 中處理資料的 tidyverse 和基本原則。R 中有很多很好的工具，但並不是每個用 R 的人都能立刻找到這些工具。這正是我們試圖改變的。我還建議 R 的新手仔細看看我們在 RStudio 開發的所有工具和包。 此外，當你有問題或遇到問題千萬不要放棄。在 StackOverflow 和其它地方有很多很有用的關於 R 的資訊，如果你仔細看它們的話，你有機會找到你的問題的答案。 JBR: 您認為統計學家和資料科學家大體上應該知道哪些關於電腦科學的知識呢？ JJ: 這是個有趣的問題。許多關於 R 的最普遍的看法和思考都圍繞著 Bo Cowgill 那著名的言論：“R 最好的地方在於它是由統計學家編寫的，R 最糟的地方也在於它是由統計學家編寫的。” 然而事實上，R 的開發者們對程式設計和電腦科學相當瞭解。他們的目標一直都是提供一個讓掌握很少的電腦科學知識的人能實現想法的表示式語言。R 努力提供一種介面和語法，使得不懂電腦科學的人也可以使用 R 做一些複雜的資料分析。 我認為總會存在一些不能用高級的指令解決的問題。所以學習基本的程式設計原則，做一些簡單的計算或者文字分析和語法分析這之類的事是有用的，但是 R 的重點還是不強迫每個人都成為電腦科學家。 3.4.1 參考書 我買過R跟Python的參考書，但我認為R語言奠基在一個不斷進化的基礎上，而且最好的R語言參考書正是以Gitbook電子書的形式免費發行在網路上供人閱讀，因此花錢買書並不太划算。 這邊提供一些有名的參考書。 R for Data Science by Hadley Wickham and Garrett Grolemund。 Hadley Wickham是RStudio的工程師，基本上也是R語言的耶穌。他讓R語言變得更容易使用，這本書介紹R資料科學，也是我的第一本教科書。 R4DS R for Data Science 第二版 好書的第二版一定也是好書(挺起來)。 Advanced R 當你有一段三行以上的程式碼要一再複製貼上重複使用，就要考慮使用函數，這本書介紹除了函數編程(Functional programming)以外也介紹R的物件導向編程(Object-oriented Programming) Advanced R 阿好伯的文章中文且品質非常好的文章! 知乎中國的知識家，和臺灣的知識家水準完全不一樣，有非常多高參考價值的文章值得一讀。 有結果後就可以準備輸出，這時可以用R忍者謝益輝開發的套件，例如： RMarkdown cookbook RMC bookdown: Authoring Books and Technical Documents with R Markdown BDC 另外是RMarkdown的另一種替代方案Quarto，可以用來產生簡潔易懂的程式碼與報告。 D4S第二版也有專文介紹Quarto。 資料科學與R語言 by 曾意儒老師，中文版免費的R教科書。 TIDY MODELING WITH R 有關資料建模。 Bookdown Gallery利用Bookdown建立的好書網站。 "],["敘述統計.html", "第 4 章 敘述統計", " 第 4 章 敘述統計 這一章節的目的是介紹如何讀取資料，將資料進行簡單的統計量計算分析，例如平均值、樣本變異數、樣本數等等。 "],["資料格式.html", "4.1 資料格式", " 4.1 資料格式 統計分析的資料，以 Excel 檔整理成以下格式，並統一存成 UFT-8 編碼的 csv 檔。 csv 檔可以用 Excel 檔開啟，因此，一旦將寫在紙上的原始資料 (raw data) 輸入到 Excel 中，再轉存成 .csv檔，就可以直接由 R 讀取，相當方便。 R也看得懂的Excel表 這樣的資料在R裡面會長這樣(不建議資料表包含中文字元) (df&lt;-data.frame( &#39;處理&#39; = rep(c(&#39;A&#39;,&#39;B&#39;),each=5), &#39;產量&#39; = c(10,10,15,12,15,30,35,65,44,55) )) ## 處理 產量 ## 1 A 10 ## 2 A 10 ## 3 A 15 ## 4 A 12 ## 5 A 15 ## 6 B 30 ## 7 B 35 ## 8 B 65 ## 9 B 44 ## 10 B 55 上方印出的東西稱為資料表 (dataframe)，資料表由2個變數 (variables) 處理和產量組成。變數名稱所在的位置稱為欄位 (columns)，欄位是有順序的，在上表中，第1欄為處理、第2欄為產量。每個欄位下面都有資料值 (values)，稱為觀測值 (observations)，觀測值左方的數字為列 (row) 數，可以看到這筆資料有2欄10列。 在開始前，請下載此檔案，將其存放在 D 槽，以利後續分析。 "],["讀取資料.html", "4.2 讀取資料", " 4.2 讀取資料 使用read.csv函數 上方指令的意思是，讀取 csv 檔，檔案放在D槽底下，名稱為iris.csv (file = 'D:/iris.csv')，而我想要幫這個資料表取名為iris_df 箭頭 (&lt;-) 在 R 中是代表賦值 (assign) 的操作子 (operator)，意思是把”箭頭右方”的物件，放入”箭頭左方”的物件。 如果左方的物件沒有指派物件，左方物件就會變成箭頭右方物件的名字。（從今天開始你的代號就是9527！） 快龍的招式 &lt;- &#39;破壞死光&#39; 快龍的招式 &lt;- &#39;千變萬花&#39; print(快龍的招式) ## [1] &quot;千變萬花&quot; 物件命名有兩個主要規則： 底線：例如 my_data、iris_df、rice_yield，兩個全為小寫的單字以底線區隔 駝峰：例如 myData、irisDf、riceYield，兩個小寫的英文單字，但第二個單字開頭為大小字母。 "],["敘述統計量表.html", "4.3 敘述統計量表", " 4.3 敘述統計量表 產生敘述統計量表格的方式應該有千萬種，這邊只介紹 2 種方法。 {psych} 套件的 descrieBy和describe 安裝 {psych} 並啟用 輸入describe # 產生敘述統計表 # 使用範例資料集 mtcars (一個車子雜誌的資料) psych::describe (mtcars) ## vars n mean sd median trimmed mad min max range skew ## mpg 1 32 20.09 6.03 19.20 19.70 5.41 10.40 33.90 23.50 0.61 ## cyl 2 32 6.19 1.79 6.00 6.23 2.97 4.00 8.00 4.00 -0.17 ## disp 3 32 230.72 123.94 196.30 222.52 140.48 71.10 472.00 400.90 0.38 ## hp 4 32 146.69 68.56 123.00 141.19 77.10 52.00 335.00 283.00 0.73 ## drat 5 32 3.60 0.53 3.70 3.58 0.70 2.76 4.93 2.17 0.27 ## wt 6 32 3.22 0.98 3.33 3.15 0.77 1.51 5.42 3.91 0.42 ## qsec 7 32 17.85 1.79 17.71 17.83 1.42 14.50 22.90 8.40 0.37 ## vs 8 32 0.44 0.50 0.00 0.42 0.00 0.00 1.00 1.00 0.24 ## am 9 32 0.41 0.50 0.00 0.38 0.00 0.00 1.00 1.00 0.36 ## gear 10 32 3.69 0.74 4.00 3.62 1.48 3.00 5.00 2.00 0.53 ## carb 11 32 2.81 1.62 2.00 2.65 1.48 1.00 8.00 7.00 1.05 ## kurtosis se ## mpg -0.37 1.07 ## cyl -1.76 0.32 ## disp -1.21 21.91 ## hp -0.14 12.12 ## drat -0.71 0.09 ## wt -0.02 0.17 ## qsec 0.34 0.32 ## vs -2.00 0.09 ## am -1.92 0.09 ## gear -1.07 0.13 ## carb 1.26 0.29 這裡你可能會覺得疑惑，報表內的median我還看得懂是中位數，那trimmed是什麼? 切碎的蠍子嗎? 當對函數的功能有疑惑時，只要在函數前面輸入 ? 再執行，就可以讀取該函數的說明文檔。 文檔內會包含使用函數的方式、函數吃什麼參數、吐什麼結果、以及範例。在文檔中可以找到 “trim=.1 – trim means by dropping the top and bottom trim fraction”，也就是去掉最大與最小值的平均值。 ?describeBy 分組敘述統計與輸出 上表計算所有變數(mpg, cyl, disp…)的敘述統計量。如果要計算手排或自排 (vs = 1,0) 及汽缸數 (cyl = 4,6,8) 不同組合的敘述統計量，就要用到分組。 我最常使用 tidyverse 來進行分組計算。 啟用套件 pkg&lt;-&#39;tidyverse&#39; if(pkg %in% installed.packages() == F) install.packages(&#39;tidyverse&#39;) library(tidyverse) 產生分組敘述統計表 mtcars %&gt;% group_by ( vs , cyl ) %&gt;% summarise( across ( where( is.numeric) , list(&#39;avg&#39;=mean, &#39;sd&#39;= sd ))) %&gt;% round(digits = 2) ## # A tibble: 5 × 20 ## # Groups: vs [2] ## vs cyl mpg_avg mpg_sd disp_avg disp_sd hp_avg hp_sd drat_avg drat_sd wt_avg ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 0 4 26 NA 120. NA 91 NA 4.43 NA 2.14 ## 2 0 6 20.6 0.75 155 8.66 132. 37.5 3.81 0.16 2.76 ## 3 0 8 15.1 2.56 353. 67.8 209. 51.0 3.23 0.37 4 ## 4 1 4 26.7 4.75 104. 27.8 81.8 21.9 4.04 0.36 2.3 ## 5 1 6 19.1 1.63 205. 44.7 115. 9.18 3.42 0.59 3.39 ## # … with 9 more variables: wt_sd &lt;dbl&gt;, qsec_avg &lt;dbl&gt;, qsec_sd &lt;dbl&gt;, ## # am_avg &lt;dbl&gt;, am_sd &lt;dbl&gt;, gear_avg &lt;dbl&gt;, gear_sd &lt;dbl&gt;, carb_avg &lt;dbl&gt;, ## # carb_sd &lt;dbl&gt; 這邊用到的是tidyverse中dplyr和magrittr套件的數個功能。 %&gt;%: 管線子(pipe) 執行一次分析，會用到非常非常多函數f(x)，下意識可能會這樣寫 # 產生100個隨機數字 x &lt;- rnorm(100) # 取絕對值(abs)、開根號(sqrt)、四捨五入到小數點後第二位(round)、顯示前6筆 x1 &lt;- abs(x) x2 &lt;- sqrt(x1) x3 &lt;- round(x2, digits = 2) head(x3) ## [1] 1.05 1.13 0.65 0.48 0.26 0.25 或是這樣，這是所謂的巢狀函數 # 產生100個隨機數字、取絕對值(abs)、開根號(sqrt)、四捨五入到小數點第二位、顯示前6筆 head(round(sqrt(abs(rnorm (100))),2)) 這樣寫起來既冗且不清楚，但用管線子可以讓代碼看起來比較清晰好懂 rnorm (100) %&gt;% abs %&gt;% sqrt %&gt;% round( . , digits = 2) %&gt;% head %&gt;%將資料由左往右傳 .代表左方傳入物件的位置 %&gt;% 右方的函數可不加括號 行與行之間用 Enter 換行，看起來比較舒服 在 RStudio 中，%&gt;%輸入快捷鍵是ctrl+shift+m group_by( 分組變數A , 分組變數B , ... ) summarize( across ( 條件判斷 , list ( 敘述統計函數1 , 敘述統計函數2 ))) 另一種分組統計的方式： "],["平均值檢定.html", "第 5 章 平均值檢定 ", " 第 5 章 平均值檢定 "],["利用t檢定比較兩個族群平均值.html", "5.1 利用t檢定比較兩個族群平均值", " 5.1 利用t檢定比較兩個族群平均值 在分析實驗結果時，我們最關切的問題，應屬”平均值之間是否有差異”。比較兩個平均值的差異，可以用t檢定；超過兩組平均值的比較，可用` (analysis of variance, ANOVA) 來檢定各組平均是否有差異。 5.1.1 資料下載 本筆資料為riceYield，係由亂數產生，下面這個程式碼只要執行一次就好。 # 產生亂數資料 riceYield&lt;-data.frame( &#39;treatment&#39; = (rep(c(&#39;A&#39;,&#39;B&#39;),each=10) ), &#39;yield&#39; = c(rnorm(n = 10 , mean = 5000 , sd = 400),rnorm(n=10 , mean = 6500 , sd = 400) )) 現在來看看這筆資料長怎樣： # 查看 前 10筆資料 head(riceYield) ## treatment yield ## 1 A 5022.325 ## 2 A 5571.627 ## 3 A 5701.114 ## 4 A 5061.333 ## 5 A 5321.750 ## 6 A 5278.850 # 查看 後 10筆資料 tail(riceYield) ## treatment yield ## 15 B 6903.899 ## 16 B 5896.421 ## 17 B 6476.869 ## 18 B 6743.577 ## 19 B 6733.806 ## 20 B 6301.172 首先看到這個東西稱為資料表 (dataframe)，資料表由兩個欄位 (columns)，treatment和yield；在每個欄位下面都有很多筆資料，這些值我們稱為觀測值 (observation)；觀測值左方的數字為列 (row)，可以看到這筆資料有2欄20列。 而上方使用到的2個函數(function)的意思： head(資料名稱): 查看該資料前6筆的值 tail(資料名稱): 查看該資料後6筆的值 利用這兩個函數，我們可以很快速地查看資料的大致樣態。 補充 在 R 中直接輸入「物件的名稱」，而沒有用冒號 ( ” or ’ ) 括起來，就會得到「物件的內容」。 例如上述資料集為”riceYield”，所以輸入riceYield就會連結到該筆資料。 英文字母的大小寫在R程式裡面是不一樣的意思。所以輸入riceyield或Riceyield或RiceYield會跳出錯誤，找不到這個東西(object ‘riceyield’ not found)，因為riceYield才有意義。 print(riceyield) ## Error in h(simpleError(msg, call)): 在為 &#39;print&#39; 函式選擇方法時評估 &#39;x&#39; 引數發生錯誤: object &#39;riceyield&#39; not found 如果想要查看整筆資料，可以直接輸入資料名稱，或是print(資料名稱)、view(資料名稱) riceYield # 等同於 print(riceYield) ## treatment yield ## 1 A 5022.325 ## 2 A 5571.627 ## 3 A 5701.114 ## 4 A 5061.333 ## 5 A 5321.750 ## 6 A 5278.850 ## 7 A 5201.688 ## 8 A 4731.029 ## 9 A 5232.685 ## 10 A 5048.170 ## 11 B 6381.962 ## 12 B 6210.716 ## 13 B 5998.317 ## 14 B 6713.641 ## 15 B 6903.899 ## 16 B 5896.421 ## 17 B 6476.869 ## 18 B 6743.577 ## 19 B 6733.806 ## 20 B 6301.172 5.1.2 兩樣本t檢定 t.test(data = riceYield, yield ~ treatment, paired = F) t.test上面有三個指令 第1個指令該筆資料的名稱，這筆資料名是資料riceYield，輸入data = riceYield 第2個指令和第1個指令中間用 , 相隔 第2個指令是告訴R比較的方式，寫法是 觀測值 ~ 處理名稱，注意這裡觀測值和處理名稱都沒有用冒號框住 第3個指令是樣本是否成對 現在來逐行看報表： ## ## Welch Two Sample t-test ## ## data: yield by treatment ## t = -8.7725, df = 17.361, p-value = 8.605e-08 ## alternative hypothesis: true difference in means between group A and group B is not equal to 0 ## 95 percent confidence interval: ## -1511.6850 -926.2767 ## sample estimates: ## mean in group A mean in group B ## 5217.057 6436.038 第2行: 表示資料是將yield依照treatment分組 (A vs B) 比較 第3行: 為檢定結果： t : t 值 df :自由度 p-value : 表示本次檢定所得 p 值 p值的表示方式比較特別，用到”e”，e代表10的幾次方： 結論：在\\(\\alpha = 0.05\\)時，兩品種產量具顯著差異。 "],["anova.html", "第 6 章 ANOVA", " 第 6 章 ANOVA ANOVA是變異數分析(analysis of variance)的英文縮寫，當想要了解3個以上平均值之間是否有差異時，可以利用ANOVA。 若當平均值只有2個，計算ANOVA就等同於計算相同變異數相同的T檢定，此時ANOVA計算的F值為T值的平方。 "],["前提假設.html", "6.1 前提假設", " 6.1 前提假設 前提假設 檢定(R) 補救方案 樣本常態與誤差獨立 qqnorm(iris$Sepal.Length)：點要接近對角線，否則不符常態 shapiro.test(iris$Sepal.Length)：顯著則不符常態 Box-Cox數據轉換 (MASS::boxcox) 變異數均值 bartlett.test(Sepal.Length~Species, data = iris) car::leveneTest(Sepal.Length~Species, data = iris) 顯著代表變異數不均值 Box-Cox數據轉換 (MASS::boxcox) 樣本與誤差具常態性且彼此獨立 \\(\\epsilon \\sim {\\sf NID}(0,\\sigma^2)\\) 變異數均值假設 樣本是來自變異數相等的族群，譬如利用某機器量測一群稻穀樣本的重量，每次量測時，機器顯示的重量，都會受到機器本身設定的影響，呈現真實重量的固定百分比，因此具有這一群稻穀樣本會有相等的變異數。 當違反假設，且變因是固定型效應，在處理重複數量均衡（彼此相同）時，對Fo僅有微弱的影響；但在處理數不均衡時，則會使顯著水準或型I錯誤率與預期值偏離。當變因是隨機型效應時，不論處理是否均衡，違反假設都會造成極大影響。 6.1.1 檢驗方式 常態性檢定： 機率分布圖(QQ plot)：將殘差計算出來，從大排到小，按數據點在圖形上。如果屬於常態分佈，會像是一條直線，不會偏離太多。 使用qqnorm查看QQ-plot qqnorm(iris$Sepal.Length) 可以看出點很貼近線，數據應該符合常態。 使用shapiro.tes檢定，顯著則代表不符合常態。 shapiro.test(iris$Sepal.Length) ## ## Shapiro-Wilk normality test ## ## data: iris$Sepal.Length ## W = 0.97609, p-value = 0.01018 因為P值不小於0.05，所以得知數據是常態分佈的資料。 獨立性與變異數均值的檢定： 順序與殘差圖：殘差如不獨立，彼此會有相關性，會一連串的正或負。將實驗進行的時間順序為X軸，殘差為Y軸作圖，應該是無結構的。 配適值與殘差圖：x軸為配適值(fitted value)，y軸為殘差(residuel)作圖。若殘差彼此之間獨立，ϵij畫出的圖不會有結構。喇叭狀代表違反獨立性與變異數均值假設。 \\[\\hat y_{ij}=\\bar y_{i.}+\\epsilon_{ij}\\] 變異數均值的檢定： \\(H_0:\\sigma_1^2=\\sigma_2^2=...=\\sigma_a^2\\) \\(H_1:至少有一個\\sigma_i^2不一樣\\) Barlett’s test：顯著代表變異數不相等 Levene’s test：顯著代表變異數不相等。 leveneTest(iris$Sepal.Length~iris$Species) ## Levene&#39;s Test for Homogeneity of Variance (center = median) ## Df F value Pr(&gt;F) ## group 2 6.3527 0.002259 ** ## 147 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 bartlett.test(iris$Sepal.Length~iris$Species) ## ## Bartlett test of homogeneity of variances ## ## data: iris$Sepal.Length by iris$Species ## Bartlett&#39;s K-squared = 16.006, df = 2, p-value = 0.0003345 上述兩個檢定皆為顯著，顯示iris數據的Sepal.Length在Species之間違反變異數相等的假說。 "],["非常態資料的轉換.html", "6.2 非常態資料的轉換", " 6.2 非常態資料的轉換 下面是常見的資料轉換方式： 開根號 取log 倒數+根號 倒數 Box-Cox轉換：先求\\(\\lambda\\)值，計算log-likeihood峰值的lambda值，根據\\(\\lambda\\)對觀測值取一個函數。實際上，Box-Cox轉換就包含了平方根、log、倒數等函數。 利用{MASS}boxcox可以計算出\\(\\lambda\\)值，但是後續取函數部分需要自行作業。因此我寫了一個函數nboxcox來完成常態性檢定與數據轉換，如果數據是常態，就不執行boxcox轉換；反之，則回傳轉換後數據。 # Box-Cox transform nboxcox&lt;-function(data , y){ require(tidyverse) data_y&lt;-unlist(as.vector(select_if(data[y],is.numeric)),use.names = F) shapiro_out &lt;- data_y %&gt;% shapiro.test() if (shapiro_out$p.value &lt; 0.05) { cat(&#39;\\n The variable&#39;,paste0(&quot;&#39;&quot;,y,&quot;&#39;&quot;),&#39;is not normality.\\n&#39;) require(MASS) forMu &lt;- formula( paste0(as.character(y),&#39;~1&#39;)) bc &lt;- boxcox(forMu,data = data) lambda&lt;- bc$x[which.max(bc$y)] if (lambda != 0){ newy &lt;- ( data_y^(lambda) -1)/lambda print(newy) }else if(lambda == 0 ){ newy &lt;- log(data_y) print(newy)}} else if(shapiro_out$p.value &gt;= 0.05){ cat(&#39;The variable&#39;,paste0(&quot;&#39;&quot;,y,&quot;&#39;&quot;), &#39;is normality.\\nReturning original data.\\n&#39;) return(data_y)}} # 範例 nboxcox(iris,&#39;Sepal.Length&#39;) ## ## The variable &#39;Sepal.Length&#39; is not normality. ## [1] 1.455175 1.423312 1.389928 1.372623 1.439425 1.500388 1.372623 1.439425 ## [9] 1.336687 1.423312 1.500388 1.406819 1.406819 1.318013 1.556402 1.542821 ## [17] 1.500388 1.455175 1.542821 1.455175 1.500388 1.455175 1.372623 1.455175 ## [25] 1.406819 1.439425 1.439425 1.470576 1.470576 1.389928 1.406819 1.500388 ## [33] 1.470576 1.514825 1.423312 1.439425 1.514825 1.423312 1.336687 1.455175 ## [41] 1.439425 1.354883 1.336687 1.439425 1.455175 1.406819 1.455175 1.372623 ## [49] 1.485642 1.439425 1.701131 1.632643 1.690193 1.514825 1.644555 1.542821 ## [57] 1.620517 1.423312 1.656259 1.470576 1.439425 1.569717 1.582778 1.595593 ## [65] 1.528966 1.667763 1.528966 1.556402 1.608170 1.528966 1.569717 1.595593 ## [73] 1.620517 1.595593 1.632643 1.656259 1.679072 1.667763 1.582778 1.542821 ## [81] 1.514825 1.514825 1.556402 1.582778 1.500388 1.582778 1.667763 1.620517 ## [89] 1.528966 1.514825 1.514825 1.595593 1.556402 1.439425 1.528966 1.542821 ## [97] 1.542821 1.608170 1.455175 1.542821 1.620517 1.556402 1.711893 1.620517 ## [105] 1.644555 1.763224 1.423312 1.732906 1.667763 1.722482 1.644555 1.632643 ## [113] 1.679072 1.542821 1.556402 1.632643 1.644555 1.773027 1.773027 1.582778 ## [121] 1.690193 1.528966 1.773027 1.620517 1.667763 1.722482 1.608170 1.595593 ## [129] 1.632643 1.722482 1.743167 1.792206 1.632643 1.620517 1.595593 1.773027 ## [137] 1.620517 1.632643 1.582778 1.690193 1.667763 1.690193 1.556402 1.679072 ## [145] 1.667763 1.667763 1.620517 1.644555 1.608170 1.569717 "],["線性模式.html", "6.3 線性模式", " 6.3 線性模式 進行隨機設計(complete design, CRD)、完全隨機區集設計(random complete block design, RCBD)等試驗設計時，其實是將觀測值放進一個線性模式裡面來分析。 舉例來說，1個包含3種水稻品種產量試驗，採用CRD，可以寫成下面線性模式： \\[Y_{ij}=\\mu+\\alpha_i+\\epsilon_{ij}\\] 換句話說： \\[A品種產量 = 產量總平均值 + 品種A的影響 + 隨機誤差\\] \\[B品種產量 = 產量總平均值 + 品種B的影響 + 隨機誤差\\] 隨機誤差 ANOVA "],["anova-1.html", "6.4 ANOVA", " 6.4 ANOVA "],["lsd-test.html", "6.5 LSD test", " 6.5 LSD test "],["generate-the-table.html", "6.6 generate the table", " 6.6 generate the table "],["plot-the-data.html", "6.7 Plot the data", " 6.7 Plot the data "],["有計畫的比較平均值.html", "第 7 章 有計畫的比較平均值", " 第 7 章 有計畫的比較平均值 變方分析結果可以告知「平均值之間是否有差異」。我們可以再利用 {agricolae}中的LSD.test進行多重比較，做出完整的結果分析。 然而，多重比較並不是具有目的性的探討研究結果，若研究者在實驗中，對特別處理組之間的比較有興趣，應該要採用「計畫性的對比」，也就是線性對比。線性對比可以自訂不同處理平均值的比較，因此稱為計畫性對比。 （林俊隆老師：先進行變方分析，再進行平均值之間的多重比較幾乎成了統計分析的八股） 在R中，計畫性的比較，被歸納為一般線性假說(General Linear Hypotheses)和模型參數多重比較(multiple comparisons for parametric models)，可以利用{multcomp}或{emmeans}。 "],["計畫性比較-簡單crd.html", "7.1 計畫性比較-簡單CRD", " 7.1 計畫性比較-簡單CRD 以iris鳶尾花資料集為例，這個資料集包含有三種物種(species)的花萼(Sepal Length)長度。 假設我們想探討三種品種的花萼長度之間是否具顯著差異，可以用下面程式碼分析 (先安裝跟啟用{agricolae})， require(agricolae) data(iris) # 建立線性模式物件 m1 &lt;- lm( data=iris , Sepal.Length~Species) # ANOVA summary(aov(m1)) ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## Species 2 63.21 31.606 119.3 &lt;2e-16 *** ## Residuals 147 38.96 0.265 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 # LSD多重比較 L1 &lt;- LSD.test( m1 , trt = &#39;Species&#39;) L1$groups ## Sepal.Length groups ## virginica 6.588 a ## versicolor 5.936 b ## setosa 5.006 c 上述分析包含兩張報表： 以品種為變因的單因子變方分析，結果Species的 P&lt;0.001，棄卻三個品種效應為零的假說（白話文：三品種的平均值之間有顯著差異）， LSD檢定顯示三個品種平均值兩兩不同，這個結果基於變方分析的線性模式。 因為變方分析顯示品種間具顯著差異，所以進行的LSD檢定屬於「受到變方分析結果保護的保護的LSD(protected LSD)，第一型錯誤率屬於「以試驗為單位的第一型錯誤率」。 非保護的LSD(unprotected LSD)，是在ANOVA變因不顯著情況下仍進行事後檢定，這時第一型錯誤率屬於「比較為單位的第一型錯誤率」。 試驗為單位的第一型錯誤率 : 試驗ANOVA分析報表的結果的第一型錯誤的機率。 比較為單位的第一型錯誤率 : 平均值之間兩兩比較發生第一型錯誤的機率。 若想檢定virginica和setosa之間差異，或是想知道virginica是不是setosa的1.5倍呢? - 「virginica和setosa的花萼長度是否有顯著差異」 $$H_0:\\mu_{virginica}-\\mu_{setosa}=0$$ 「virginica的花萼長度是不是setosa的1.5倍?」: \\[H_0:\\mu_{virginica}-1.5\\mu_{setosa}=0\\] 線性對比的檢定方式有兩種，利用{multcomp}的glht函數，或{emmeans}的contrast函數 7.1.1 glht函數 建立線性對比係數的矩陣，該矩陣稱為”回歸係數矩陣” (matrix of coefficients)。首先查看模式參數。 if (!&#39;multcomp&#39;%in% installed.packages()) {install.packages(&#39;multcomp&#39;)} library(multcomp) # 線性模式參數 m1 &lt;- lm( data=iris , Sepal.Length~Species) print(coef(m1)) ## (Intercept) Speciesversicolor Speciesvirginica ## 5.006 0.930 1.582 這個一般線性模式參數包含三項，對應Species的三個等級(Intercept為setosa之效應)。 回歸係數矩陣為cp_m。 # 利用 rbind 產生一個包含線性對比的係數的矩陣 cp_m # name 設為 &quot;處理因子的線性對比&quot; # 係數的順序對應coef(m1) cp_m &lt;- rbind ( &#39; 1 se + 0ve - 1vi&#39; = c( 1 , 0 , -1) , &#39;-1.5se + 1ve - 0vi&#39; = c( -1.5 , 1 , 0) ) cp_m ## [,1] [,2] [,3] ## 1 se + 0ve - 1vi 1.0 0 -1 ## -1.5se + 1ve - 0vi -1.5 1 0 以glht來計算。這個函數需要輸入線性模式物件、比較係數的矩陣。 比較係數的矩陣可以使用linfct = mcp( 處理 = 回歸係數矩陣 )表示 glht(m1, linfct = mcp( Species = c(&quot;virginica - setosa = 0&quot;))) ## ## General Linear Hypotheses ## ## Multiple Comparisons of Means: User-defined Contrasts ## ## ## Linear Hypotheses: ## Estimate ## virginica - setosa == 0 1.582 補充：具有交感項的多重比較法 利用emmeans library(emmeans) data(&quot;nutrition&quot;) colnames(nutrition) ## [1] &quot;age&quot; &quot;group&quot; &quot;race&quot; &quot;gain&quot; m2&lt;-lm( gain~race*group ,nutrition) summary(emmeans( m2 , list(pairwise~group*race), adjust=&#39;tukey&#39;)) ## $`emmeans of group, race` ## group race emmean SE df lower.CL upper.CL ## FoodStamps Black 5.000 1.999 101 1.03 8.966 ## NoAid Black -1.929 1.414 101 -4.73 0.876 ## FoodStamps Hispanic 0.000 5.290 101 -10.49 10.494 ## NoAid Hispanic 2.500 3.741 101 -4.92 9.920 ## FoodStamps White 4.769 0.734 101 3.31 6.224 ## NoAid White -0.516 0.950 101 -2.40 1.369 ## ## Confidence level used: 0.95 ## ## $`pairwise differences of group, race` ## 1 estimate SE df t.ratio p.value ## FoodStamps Black - NoAid Black 6.929 2.45 101 2.829 0.0609 ## FoodStamps Black - FoodStamps Hispanic 5.000 5.66 101 0.884 0.9495 ## FoodStamps Black - NoAid Hispanic 2.500 4.24 101 0.589 0.9915 ## FoodStamps Black - FoodStamps White 0.231 2.13 101 0.108 1.0000 ## FoodStamps Black - NoAid White 5.516 2.21 101 2.492 0.1363 ## NoAid Black - FoodStamps Hispanic -1.929 5.48 101 -0.352 0.9993 ## NoAid Black - NoAid Hispanic -4.429 4.00 101 -1.107 0.8773 ## NoAid Black - FoodStamps White -6.698 1.59 101 -4.205 0.0008 ## NoAid Black - NoAid White -1.412 1.70 101 -0.829 0.9614 ## FoodStamps Hispanic - NoAid Hispanic -2.500 6.48 101 -0.386 0.9989 ## FoodStamps Hispanic - FoodStamps White -4.769 5.34 101 -0.893 0.9474 ## FoodStamps Hispanic - NoAid White 0.516 5.37 101 0.096 1.0000 ## NoAid Hispanic - FoodStamps White -2.269 3.81 101 -0.595 0.9911 ## NoAid Hispanic - NoAid White 3.016 3.86 101 0.782 0.9701 ## FoodStamps White - NoAid White 5.285 1.20 101 4.403 0.0004 ## ## P value adjustment: tukey method for comparing a family of 6 estimates "],["計畫性比較-複雜資料.html", "7.2 計畫性比較-複雜資料", " 7.2 計畫性比較-複雜資料 利用林俊隆老師書中案例IRRI陸稻殺草劑試驗，資料存放在 riceHerbic require(tidyverse) require(magrittr) require(agricolae) require(multcomp) require(emmeans) riceHerbicide &lt;- read.csv(&#39;dataset/riceHerbicide.csv&#39;) riceHerbicide %&gt;% str ## &#39;data.frame&#39;: 40 obs. of 5 variables: ## $ treatment: chr &quot;Handweedingtwice&quot; &quot;Handweedingtwice&quot; &quot;Handweedingtwice&quot; &quot;Handweedingtwice&quot; ... ## $ applytime: chr &quot;15and35&quot; &quot;15and35&quot; &quot;15and35&quot; &quot;15and35&quot; ... ## $ rate : chr &quot;.&quot; &quot;.&quot; &quot;.&quot; &quot;.&quot; ... ## $ rep : int 1 2 3 4 1 2 3 1 2 3 ... ## $ yield : int 3202 3060 2240 2690 2308 2335 1975 3390 2875 2775 ... 資料的類型(class)不對，處理的部分被視為character，要修正成factor riceHerbicide %&lt;&gt;% mutate(treatment = as.factor(treatment), applytime = as.factor(applytime), rate = as.factor(rate), rep = as.factor(rep)) riceHerbicide %&gt;% str ## &#39;data.frame&#39;: 40 obs. of 5 variables: ## $ treatment: Factor w/ 7 levels &quot;CK&quot;,&quot;Handweedingtwice&quot;,..: 2 2 2 2 4 4 4 4 4 4 ... ## $ applytime: Factor w/ 5 levels &quot;.&quot;,&quot;14&quot;,&quot;15and35&quot;,..: 3 3 3 3 5 5 5 5 5 5 ... ## $ rate : Factor w/ 6 levels &quot;.&quot;,&quot;1.5&quot;,&quot;2&quot;,..: 1 1 1 1 4 4 4 4 4 4 ... ## $ rep : Factor w/ 4 levels &quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;: 1 2 3 4 1 2 3 1 2 3 ... ## $ yield : int 3202 3060 2240 2690 2308 2335 1975 3390 2875 2775 ... 接下來可以進行分析 首先建立一個統計敘述表 se&lt;-function(x) return( sd(x)/length(x) ) riceHerbicide %&gt;% group_by( treatment , applytime ) %&gt;% summarize( across( is.numeric, list(&#39;n&#39; = length,&#39;avg&#39;=mean,&#39;se&#39;=se ))) ## # A tibble: 10 × 5 ## # Groups: treatment [7] ## treatment applytime yield_n yield_avg yield_se ## &lt;fct&gt; &lt;fct&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 CK . 4 1237. 71.2 ## 2 Handweedingtwice 15and35 4 2798 108. ## 3 Phenyedipham 14 3 2565. 117. ## 4 Proapnil/2,4-D 28 6 2610. 84.2 ## 5 Proapnil/CHCH 21 3 2568. 96.6 ## 6 Propanil/Bromoxynil 14 4 2948. 104. ## 7 Propanil/Bromoxynil 21 4 3644 167. ## 8 Propanil/Bromoxynil 28 4 2484. 136. ## 9 Propanil/Ioxynil 14 4 2910. 126. ## 10 Propanil/Ioxynil 28 4 2041 48.5 上表可以看到，控制組(ck)其實產量蠻低的，不到1500，所以殺草劑處理為變因的F檢定很可能是顯著的。 但若是想做計畫性的比較(例如: 比較除草劑效果跟手除效果)，就要用線性對比來分析。 ANOVA m2 &lt;- lm (data = riceHerbicide , yield ~ treatment + rep ) m2 %&gt;% anova ## Analysis of Variance Table ## ## Response: yield ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## treatment 6 9874945 1645824 5.1905 0.0009145 *** ## rep 3 822264 274088 0.8644 0.4702886 ## Residuals 30 9512515 317084 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 結果處理間平均值具顯著差異。 多重比較 L2 &lt;- LSD.test(m2, trt=&#39;treatment&#39;) L2$group ## yield groups ## Propanil/Bromoxynil 3025.250 a ## Handweedingtwice 2798.000 ab ## Proapnil/2,4-D 2609.667 ab ## Proapnil/CHCH 2567.667 ab ## Phenyedipham 2564.667 ab ## Propanil/Ioxynil 2475.250 b ## CK 1237.250 c 多重比較可以看出手除兩次(handweeding twice)不遜於除草劑，而Propanil/Ioxynil除草劑效果比較不好。控制組可能因為雜草叢生，所以產量最低。 線性對比：除草劑效果跟手除效果比較 這裡的處理因子有7個等級，建立矩陣前，先查看這7個等級的順序，再依此建立比較矩陣。 # compaison: CK vs Herbicide # 因子排列順序 riceHerbicide$treatment %&gt;% levels() ## [1] &quot;CK&quot; &quot;Handweedingtwice&quot; &quot;Phenyedipham&quot; ## [4] &quot;Proapnil/2,4-D&quot; &quot;Proapnil/CHCH&quot; &quot;Propanil/Bromoxynil&quot; ## [7] &quot;Propanil/Ioxynil&quot; # 特定線性模式 m &lt;- lm(formula = yield ~ treatment + rep, data = riceHerbicide) cfm &lt;- rbind( &#39;5hand - Herbicide&#39; = c( 0 , 5 , -1 , -1 , -1 , -1 , -1 )) glht( m , linfct = mcp( treatment = cfm)) %&gt;% summary ## ## Simultaneous Tests for General Linear Hypotheses ## ## Multiple Comparisons of Means: User-defined Contrasts ## ## ## Fit: lm(formula = yield ~ treatment + rep, data = riceHerbicide) ## ## Linear Hypotheses: ## Estimate Std. Error t value Pr(&gt;|t|) ## 5hand - Herbicide == 0 967.7 1531.7 0.632 0.532 ## (Adjusted p values reported -- single-step method) 利用emmeans再做一次 e &lt;- emmeans( m, ~ treatment) contrast(e,list(&#39;hand vs herbicide&#39;=c(0,5,-1,-1,-1,-1,-1))) ## contrast estimate SE df t.ratio p.value ## hand vs herbicide 968 1532 30 0.632 0.5323 ## ## Results are averaged over the levels of: rep 比較兩張表5hand vs herbicide的estimate和p值都是相同的，但如果加入其他對比，結果會不一樣。 # 特定線性模式 # glht m &lt;- lm(formula = yield ~ treatment + rep, data = riceHerbicide) cfm &lt;- rbind(&#39;5hand - Herbicide&#39;= c(0,5,-1,-1,-1,-1,-1), &#39;CK vs others&#39;=c(6,-1,-1,-1,-1,-1,-1)) glht(m,linfct=mcp( treatment = cfm)) %&gt;% summary ## ## Simultaneous Tests for General Linear Hypotheses ## ## Multiple Comparisons of Means: User-defined Contrasts ## ## ## Fit: lm(formula = yield ~ treatment + rep, data = riceHerbicide) ## ## Linear Hypotheses: ## Estimate Std. Error t value Pr(&gt;|t|) ## 5hand - Herbicide == 0 967.7 1531.7 0.632 0.778439 ## CK vs others == 0 -8396.8 1815.8 -4.624 0.000134 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## (Adjusted p values reported -- single-step method) # p = 0.78 # emmeans + constrast e &lt;- emmeans( m, ~ treatment) contrast(e,list(&#39;hand vs herbicide&#39;=c(0,5,-1,-1,-1,-1,-1), &#39;CK vs others&#39;=c(6,-1,-1,-1,-1 ,-1,-1))) ## contrast estimate SE df t.ratio p.value ## hand vs herbicide 968 1532 30 0.632 0.5323 ## CK vs others -8397 1816 30 -4.624 0.0001 ## ## Results are averaged over the levels of: rep # p = 0.53 可以看出兩張表的hand vs herbicide的P變的不一樣了，因為glht是計算聯立p值，如果同時輸入多個線性對比，P值會有因應的變化。 如果要微調，也可以在summary調整成原始P值。 # 特定線性模式 # glht cfm &lt;- rbind( &#39;5hand - Herbicide&#39;=c(0,5,-1,-1,-1,-1,-1), &#39;CK vs others&#39;=c(6,-1,-1,-1,-1,-1,-1)) g &lt;- glht( m2 ,linfct = mcp( treatment = cfm)) summary(g , test = adjusted(&#39;none&#39;)) ## ## Simultaneous Tests for General Linear Hypotheses ## ## Multiple Comparisons of Means: User-defined Contrasts ## ## ## Fit: lm(formula = yield ~ treatment + rep, data = riceHerbicide) ## ## Linear Hypotheses: ## Estimate Std. Error t value Pr(&gt;|t|) ## 5hand - Herbicide == 0 967.7 1531.7 0.632 0.532 ## CK vs others == 0 -8396.8 1815.8 -4.624 6.72e-05 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## (Adjusted p values reported -- none method) # p = 0.53 從結果可以看出，手除草的效果其實不遜於除草劑。大家可以多去田裡拔拔草，有益材料生長以及身心健康。 "]]
