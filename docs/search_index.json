[["anova.html", "第 5 章 ANOVA", " 第 5 章 ANOVA ANOVA是變異數分析(analysis of variance)的英文縮寫，當想要了解3個以上平均值之間是否有差異時，可以利用ANOVA。 若當平均值只有2個，計算ANOVA就等同於計算相同變異數相同的T檢定，此時ANOVA計算的F值為T值的平方。 "],["前提假設.html", "5.1 前提假設", " 5.1 前提假設 前提假設 檢定(R) 補救方案 樣本常態與誤差獨立 qqnorm(iris$Sepal.Length)：點要接近對角線，否則不符常態 shapiro.test(iris$Sepal.Length)：顯著則不符常態 Box-Cox數據轉換 (MASS::boxcox) 變異數均值 bartlett.test(Sepal.Length~Species, data = iris) car::leveneTest(Sepal.Length~Species, data = iris) 顯著代表變異數不均值 Box-Cox數據轉換 (MASS::boxcox) 樣本與誤差具常態性且彼此獨立 \\(\\epsilon \\sim {\\sf NID}(0,\\sigma^2)\\) 變異數均值假設 樣本是來自變異數相等的族群，譬如利用某機器量測一群稻穀樣本的重量，每次量測時，機器顯示的重量，都會受到機器本身設定的影響，呈現真實重量的固定百分比，因此具有這一群稻穀樣本會有相等的變異數。 當違反假設，且變因是固定型效應，在處理重複數量均衡（彼此相同）時，對Fo僅有微弱的影響；但在處理數不均衡時，則會使顯著水準或型I錯誤率與預期值偏離。當變因是隨機型效應時，不論處理是否均衡，違反假設都會造成極大影響。 5.1.1 檢驗方式 常態性檢定： 機率分布圖(QQ plot)：將殘差計算出來，從大排到小，按數據點在圖形上。如果屬於常態分佈，會像是一條直線，不會偏離太多。 使用qqnorm查看QQ-plot qqnorm(iris$Sepal.Length) 可以看出點很貼近線，數據應該符合常態。 使用shapiro.tes檢定，顯著則代表不符合常態。 shapiro.test(iris$Sepal.Length) ## ## Shapiro-Wilk normality test ## ## data: iris$Sepal.Length ## W = 0.97609, p-value = 0.01018 因為P值不小於0.05，所以得知數據是常態分佈的資料。 獨立性與變異數均值的檢定： 順序與殘差圖：殘差如不獨立，彼此會有相關性，會一連串的正或負。將實驗進行的時間順序為X軸，殘差為Y軸作圖，應該是無結構的。 配適值與殘差圖：x軸為配適值(fitted value)，y軸為殘差(residuel)作圖。若殘差彼此之間獨立，ϵij畫出的圖不會有結構。喇叭狀代表違反獨立性與變異數均值假設。 \\[\\hat y_{ij}=\\bar y_{i.}+\\epsilon_{ij}\\] 變異數均值的檢定： \\(H_0:\\sigma_1^2=\\sigma_2^2=...=\\sigma_a^2\\) \\(H_1:至少有一個\\sigma_i^2不一樣\\) Barlett’s test：顯著代表變異數不相等 Levene’s test：顯著代表變異數不相等。 leveneTest(iris$Sepal.Length~iris$Species) ## Levene&#39;s Test for Homogeneity of Variance (center = median) ## Df F value Pr(&gt;F) ## group 2 6.3527 0.002259 ** ## 147 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 bartlett.test(iris$Sepal.Length~iris$Species) ## ## Bartlett test of homogeneity of variances ## ## data: iris$Sepal.Length by iris$Species ## Bartlett&#39;s K-squared = 16.006, df = 2, p-value = 0.0003345 上述兩個檢定皆為顯著，顯示iris數據的Sepal.Length在Species之間違反變異數相等的假說。 5.1.2 開根號 取log 倒數+根號 倒數 Box-Cox轉換：先求\\(\\lambda\\)值，計算log-likeihood峰值的lambda值，根據\\(\\lambda\\)對觀測值取一個函數。實際上，Box-Cox轉換就包含了平方根、log、倒數等函數。 利用{MASS}boxcox可以計算出\\(\\lambda\\)值，但是後續取函數部分需要自行作業。因此我寫了一個函數nboxcox來完成常態性檢定與數據轉換，如果數據是常態，就不執行boxcox轉換；反之，則回傳轉換後數據。 # 開根號 iris$Sepal.Length &lt;- sqrt(iris$Sepal.Length) # 取log iris$Sepal.Length &lt;- log(iris$Sepal.Length) # 倒數根號 iris$Sepal.Length &lt;- sqrt((iris$Sepal.Length)^(-1)) # 倒數 iris$Sepal.Length &lt;- (iris$Sepal.Length)^(-1) # Box-Cox transform nboxcox&lt;-function(data , y){ require(tidyverse) data_y&lt;-unlist(as.vector(select_if(data[y],is.numeric)),use.names = F) shapiro_out &lt;- data_y %&gt;% shapiro.test() if (shapiro_out$p.value &lt; 0.05) { cat(&#39;\\n The variable&#39;,paste0(&quot;&#39;&quot;,y,&quot;&#39;&quot;),&#39;is not normality.\\n&#39;) require(MASS) forMu &lt;- formula( paste0(as.character(y),&#39;~1&#39;)) bc &lt;- boxcox(forMu,data = data) lambda&lt;- bc$x[which.max(bc$y)] if (lambda != 0){ newy &lt;- ( data_y^(lambda) -1)/lambda print(newy) }else if(lambda == 0 ){ newy &lt;- log(data_y) print(newy)}} else if(shapiro_out$p.value &gt;= 0.05){ cat(&#39;The variable&#39;,paste0(&quot;&#39;&quot;,y,&quot;&#39;&quot;), &#39;is normality.\\nReturning original data.\\n&#39;) return(data_y)} } # 範例 nboxcox(iris,&#39;Sepal.Length&#39;) ## The variable &#39;Sepal.Length&#39; is normality. ## Returning original data. ## [1] 0.9025632 0.8914133 0.8796484 0.8735148 0.8970613 0.9182589 0.8735148 ## [8] 0.8970613 0.8606987 0.8914133 0.9182589 0.8856116 0.8856116 0.8539950 ## [15] 0.9375121 0.9328628 0.9182589 0.9025632 0.9328628 0.9025632 0.9182589 ## [22] 0.9025632 0.8735148 0.9025632 0.8856116 0.8970613 0.8970613 0.9079258 ## [29] 0.9079258 0.8796484 0.8856116 0.9182589 0.9079258 0.9232411 0.8914133 ## [36] 0.8970613 0.9232411 0.8914133 0.8606987 0.9025632 0.8970613 0.8672016 ## [43] 0.8606987 0.8970613 0.9025632 0.8856116 0.9025632 0.8735148 0.9131557 ## [50] 0.8970613 0.9863849 0.9634049 0.9827312 0.9232411 0.9674198 0.9328628 ## [57] 0.9593096 0.8914133 0.9713572 0.9079258 0.8970613 0.9420595 0.9465092 ## [64] 0.9508651 0.9281074 0.9752199 0.9281074 0.9375121 0.9551307 0.9281074 ## [71] 0.9420595 0.9508651 0.9593096 0.9508651 0.9634049 0.9713572 0.9790104 ## [78] 0.9752199 0.9465092 0.9328628 0.9232411 0.9232411 0.9375121 0.9465092 ## [85] 0.9182589 0.9465092 0.9752199 0.9593096 0.9281074 0.9232411 0.9232411 ## [92] 0.9508651 0.9375121 0.8970613 0.9281074 0.9328628 0.9328628 0.9551307 ## [99] 0.9025632 0.9328628 0.9593096 0.9375121 0.9899734 0.9593096 0.9674198 ## [106] 1.0070125 0.8914133 0.9969640 0.9752199 0.9934991 0.9674198 0.9634049 ## [113] 0.9790104 0.9328628 0.9375121 0.9634049 0.9674198 1.0102525 1.0102525 ## [120] 0.9465092 0.9827312 0.9281074 1.0102525 0.9593096 0.9752199 0.9934991 ## [127] 0.9551307 0.9508651 0.9634049 0.9934991 1.0003699 1.0165783 0.9634049 ## [134] 0.9593096 0.9508651 1.0102525 0.9593096 0.9634049 0.9465092 0.9827312 ## [141] 0.9752199 0.9827312 0.9375121 0.9790104 0.9752199 0.9752199 0.9593096 ## [148] 0.9674198 0.9551307 0.9420595 "],["線性模式.html", "5.2 線性模式", " 5.2 線性模式 進行隨機設計(complete design, CRD)、完全隨機區集設計(random complete block design, RCBD)等試驗設計時，其實是將觀測值放進一個線性模式裡面來分析。 舉例來說，1個包含3種水稻品種產量試驗，採用CRD，可以寫成下面線性模式： \\[Y_{ij}=\\mu+\\alpha_i+\\epsilon_{ij}\\] 換句話說： \\[A品種產量 = 產量總平均值 + 品種A的影響 + 隨機誤差\\] \\[B品種產量 = 產量總平均值 + 品種B的影響 + 隨機誤差\\] 隨機誤差 ANOVA "],["anova-1.html", "5.3 ANOVA", " 5.3 ANOVA "],["lsd-test.html", "5.4 LSD test", " 5.4 LSD test "],["generate-the-table.html", "5.5 generate the table", " 5.5 generate the table "],["plot-the-data.html", "5.6 Plot the data", " 5.6 Plot the data "]]
