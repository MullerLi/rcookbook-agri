[["index.html", "R Cookbook for Agricultural Research 第 1 章 關於 1.1 這是什麼? 1.2 這不是什麼? 1.3 推薦參考資訊", " R Cookbook for Agricultural Research 李誠紘 Cheng Hong, Li 2022-12-07 第 1 章 關於 這是一本關於統計程式語言 R 的筆記，嘗試 (用白話文) 記錄我在 農業試驗研究 上使用的 R 程式語言。 1.1 這是什麼? 這是一個利用 R bookdown 撰寫，部屬在Github Page上的電子書。 這是我的學習筆記、速查本。 這本書包含農業研究常用的統計學、試驗設計學、資料繪圖的 R 程式語言。 要讀懂這本書，基礎的試驗設計學知識是必須的。 1.2 這不是什麼? 這不是大神寫的書，但這是少見的試驗設計學跟 R 語言的參考文本。 這不是讓你學到高深機器學習技巧的參考文本。若你已經了解資料科學、R 語言，這本書對你來說會太簡單 1.3 推薦參考資訊 資料科學與R語言 by 長庚大學資管系曾意儒老師。 這是中文版免費的R教科書。 R for Data Science by Hadley Wickham and Garrett Grolemund. Hadley Wickham是RStudio的科學家，也是R語言的耶穌。他寫出來的套件(packages)讓R語言變得更容易使用。這本書用生動有趣的文法介紹資料科學與R的好用套件。 本書的R語言版本： sessionInfo() ## R version 4.2.2 (2022-10-31 ucrt) ## Platform: x86_64-w64-mingw32/x64 (64-bit) ## Running under: Windows 10 x64 (build 19044) ## ## Matrix products: default ## ## locale: ## [1] LC_COLLATE=Chinese (Traditional)_Taiwan.utf8 LC_CTYPE=Chinese (Traditional)_Taiwan.utf8 ## [3] LC_MONETARY=Chinese (Traditional)_Taiwan.utf8 LC_NUMERIC=C ## [5] LC_TIME=Chinese (Traditional)_Taiwan.utf8 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] magrittr_2.0.3 multcomp_1.4-20 TH.data_1.1-1 MASS_7.3-58.1 survival_3.4-0 mvtnorm_1.1-3 ## [7] agricolae_1.3-5 psych_2.2.9 forcats_0.5.2 stringr_1.4.1 dplyr_1.0.10 purrr_0.3.5 ## [13] readr_2.1.3 tidyr_1.2.1 tibble_3.1.8 ggplot2_3.4.0 tidyverse_1.3.2 ## ## loaded via a namespace (and not attached): ## [1] nlme_3.1-160 fs_1.5.2 lubridate_1.9.0 httr_1.4.4 ## [5] tools_4.2.2 backports_1.4.1 bslib_0.4.1 utf8_1.2.2 ## [9] R6_2.5.1 AlgDesign_1.2.1 DBI_1.1.3 mgcv_1.8-41 ## [13] questionr_0.7.7 colorspace_2.0-3 withr_2.5.0 tidyselect_1.2.0 ## [17] mnormt_2.1.1 klaR_1.7-1 compiler_4.2.2 cli_3.4.1 ## [21] rvest_1.0.3 xml2_1.3.3 sandwich_3.0-2 labeling_0.4.2 ## [25] bookdown_0.30 sass_0.4.2 scales_1.2.1 digest_0.6.30 ## [29] rmarkdown_2.18 pkgconfig_2.0.3 htmltools_0.5.3 labelled_2.10.0 ## [33] dbplyr_2.2.1 fastmap_1.1.0 highr_0.9 rlang_1.0.6 ## [37] readxl_1.4.1 rstudioapi_0.14 shiny_1.7.3 jquerylib_0.1.4 ## [41] farver_2.1.1 generics_0.1.3 zoo_1.8-11 combinat_0.0-8 ## [45] jsonlite_1.8.3 googlesheets4_1.0.1 thematic_0.1.2.1 Matrix_1.5-1 ## [49] Rcpp_1.0.9 munsell_0.5.0 fansi_1.0.3 lifecycle_1.0.3 ## [53] stringi_1.7.8 yaml_2.3.6 grid_4.2.2 parallel_4.2.2 ## [57] promises_1.2.0.1 crayon_1.5.2 miniUI_0.1.1.1 lattice_0.20-45 ## [61] haven_2.5.1 splines_4.2.2 hms_1.1.2 knitr_1.40 ## [65] pillar_1.8.1 codetools_0.2-18 reprex_2.0.2 glue_1.6.2 ## [69] evaluate_0.18 modelr_0.1.9 vctrs_0.5.0 tzdb_0.3.0 ## [73] httpuv_1.6.6 cellranger_1.1.0 gtable_0.3.1 assertthat_0.2.1 ## [77] cachem_1.0.6 xfun_0.34 mime_0.12 xtable_1.8-4 ## [81] broom_1.0.1 later_1.3.0 rsconnect_0.8.28 googledrive_2.0.0 ## [85] gargle_1.2.1 cluster_2.1.4 timechange_0.1.1 ellipsis_0.3.2 "],["開始之前.html", "第 2 章 開始之前 2.1 第一個 R 程式碼 2.2 第一張圖", " 第 2 章 開始之前 事前作業：下載與安裝好 R 及 RStudio R是必須要安裝的，否則沒辦法使用 (驚!!) RStudio則是R語言的”整合開發環境’ (Integrated Development Environment, IDE)，讓你更舒服地撰寫程式。 雖說 RStudio 不是必須，但是本書程式碼全部都是在RStudio中寫出來的，可見 RStudio 有奪好用。 2.1 第一個 R 程式碼 複製下面程式碼，輸入 console 介面中，點按執行。 這是你的第一個R程式碼，哈囉世界！ print(&#39;Hello world!&#39;) ## [1] &quot;Hello world!&quot; 本書會包含程式碼 (上方灰框) 與執行結果 (下方灰框)，你可以直接複製貼上程式碼，在 R 介面中執行。 你會發現，R語言很像是Google助理，輸入一行指令，執行後就會返回一行結果。這種一來一往類型的程式語言叫做直譯語言 (Interpreted Language)。 但是，一段 R 的程式碼也有可能很多行，譬如下面畫圖的函數，就是一個多行組成的程式碼。 2.2 第一張圖 你可以將下面程式碼複製後，整個貼到你的RStudio介面或是R中執行，畫出你的第一張圖： pkg &lt;- &#39;ggplot2&#39; if ( pkg %in% installed.packages() == FALSE) install.packages(pkg) invisible(lapply(pkg, library, character.only = TRUE)) ggplot(data = iris, mapping = aes(x = Sepal.Length, y = Petal.Width, color = Species))+ geom_jitter()+ geom_smooth(method=&#39;lm&#39;,se=F)+ theme_bw()+ labs(x=&#39;花萼長度(cm)&#39;, y=&#39;花瓣寬度(cm)&#39;, color = &#39;品種&#39;, title = &#39;鳶尾花花萼長與花瓣寬線性關係&#39;) 上面是利用R內建的資料iris所進行的繪圖，只要學會使用R語言，不同類型的資料也都可以畫出好看又專業的圖。 這筆資料又稱為鳶尾花(iris)資料集，是 R. A. Fisher 1938年出版的 The Use of Multiple Measurements in Taxonomic Problems 中使用到的資料集。 這個資料集非常有名，包含有加拿大加斯帕半島採集到的三種鳶尾花品種形態資料。(葉茂生老師說：形不是型！不可以弄錯) 像這樣的資料集已經內建在R程式，我們稱為範例資料集，可以用簡單的指令叫出來。 "],["敘述統計.html", "第 3 章 敘述統計 3.1 資料格式 3.2 讀取資料 3.3 敘述統計量表", " 第 3 章 敘述統計 這一章節的目的是介紹如何讀取資料，將資料進行簡單的統計量計算分析，例如平均值、樣本變異數、樣本數等等。 3.1 資料格式 統計分析的資料，以 Excel 檔整理成以下格式，並統一存成 UFT-8 編碼的 csv 檔。 csv 檔可以用 Excel 檔開啟，因此，一旦將寫在紙上的原始資料 (raw data) 輸入到 Excel 中，再轉存成 .csv檔，就可以直接由 R 讀取，相當方便。 excel 這樣的資料在R裡面會長這樣： ## 處理 產量 ## 1 A 10 ## 2 A 10 ## 3 A 15 ## 4 A 12 ## 5 A 15 ## 6 B 30 ## 7 B 35 ## 8 B 65 ## 9 B 44 ## 10 B 55 上方印出的東西稱為資料表 (dataframe)， 資料表由2個變數 (variables) 組成，處理和產量； 變數名稱所在的位置稱為欄位 (columns)， 欄位是有順序的，在上表中，第1欄為處理、第2欄為產量。 每個欄位下面都有資料值 (values)，稱為觀測值 (observations)， 觀測值左方的數字為列 (row) 數，可以看到這筆資料有2欄10列。 若細究資料表的結構，其實他的2個欄位是由2個有名稱的向量組成。 在開始前，請下載此檔案，將其存放在 D 槽，以利後續分析。 3.2 讀取資料 使用read.csv函數 上方指令的意思是，讀取 csv 檔(read.csv)，檔案放在D槽底下，名稱為iris.csv (file = 'D:/iris.csv') 讀取完之後，在 R 的環境中，我想要幫這個資料表取名為iris_df ( iris_df &lt;- ) 這裡有些細節要交代： 箭頭 (&lt;-) 在 R 中是代表賦值 (assign) 的操作子 (operator)，意思是把”箭頭右方”的物件，放入”箭頭左方”的物件。 如果左方的物件是空的，左方物件就會變成箭頭右方物件的名字。（從今天開始你的代號就是9527！） x &lt;- c(&#39;破壞死光&#39;) cat(&#39;x = &#39;,x) ## x = 破壞死光 x &lt;- c(&#39;千變萬花&#39;) cat(&#39;\\n新的x = &#39;,x) ## ## 新的x = 千變萬花 取名的時候，要注意規則統一。好的命名原則有兩個： 底線: 例如 my_data、iris_df、rice_yield，兩個全為小寫的單字以底線區隔 駝峰: 例如 myData、irisDf、riceYield，兩個小寫的英文單字，但第二個單字開頭為大小字母。 3.3 敘述統計量表 產生敘述統計量表的方式應該有千萬種，這邊只介紹 2 種方法。 {psych} 套件的 descrieBy和describe 安裝 {psych} 並啟用 # 檢查有無安裝，若無則繼續安裝套件 if(&#39;psych&#39;%in%installed.packages() == FALSE) install.packages(&#39;psych&#39;) # 啟用 library(psych) 輸入describe # 產生敘述統計表 # 使用範例資料集 mtcars (一個車子雜誌的資料) psych::describe (mtcars) ## vars n mean sd median trimmed mad min max range skew kurtosis se ## mpg 1 32 20.09 6.03 19.20 19.70 5.41 10.40 33.90 23.50 0.61 -0.37 1.07 ## cyl 2 32 6.19 1.79 6.00 6.23 2.97 4.00 8.00 4.00 -0.17 -1.76 0.32 ## disp 3 32 230.72 123.94 196.30 222.52 140.48 71.10 472.00 400.90 0.38 -1.21 21.91 ## hp 4 32 146.69 68.56 123.00 141.19 77.10 52.00 335.00 283.00 0.73 -0.14 12.12 ## drat 5 32 3.60 0.53 3.70 3.58 0.70 2.76 4.93 2.17 0.27 -0.71 0.09 ## wt 6 32 3.22 0.98 3.33 3.15 0.77 1.51 5.42 3.91 0.42 -0.02 0.17 ## qsec 7 32 17.85 1.79 17.71 17.83 1.42 14.50 22.90 8.40 0.37 0.34 0.32 ## vs 8 32 0.44 0.50 0.00 0.42 0.00 0.00 1.00 1.00 0.24 -2.00 0.09 ## am 9 32 0.41 0.50 0.00 0.38 0.00 0.00 1.00 1.00 0.36 -1.92 0.09 ## gear 10 32 3.69 0.74 4.00 3.62 1.48 3.00 5.00 2.00 0.53 -1.07 0.13 ## carb 11 32 2.81 1.62 2.00 2.65 1.48 1.00 8.00 7.00 1.05 1.26 0.29 這裡你可能會覺得疑惑，報表內的median我還看得懂是中位數，那trimmed是什麼? 切碎的蠍子嗎? 當對函數的功能有疑惑時，只要在函數前面輸入 ? 再執行，就可以讀取該函數的說明文檔。 文檔內會包含使用函數的方式、函數吃什麼參數、吐什麼結果、以及範例。 ?describeBy 在文檔中可以找到 “trim=.1 – trim means by dropping the top and bottom trim fraction”，也就是去掉最大與最小值的平均值。 分組敘述統計與輸出 以上表為例，上表是計算所有變數(mpg, cyl, disp…)的敘述統計量，如果今天想算手排或自排 (vs=1 or 0) 以及 汽缸數 (cyl = 4,6,8) 不同組合的敘述統計量，就要用到分組。 我最常使用 tidyverse 來進行分組計算。 pkg&lt;-&#39;tidyverse&#39; if(pkg %in% installed.packages() == F) install.packages(&#39;tidyverse&#39;) library(tidyverse) mtcars %&gt;% group_by ( vs , cyl ) %&gt;% summarise( across ( where( is.numeric) , list(&#39;avg&#39;=mean, &#39;se&#39;= se ))) %&gt;% round(digits = 2) ## `summarise()` has grouped output by &#39;vs&#39;. You can override using the `.groups` argument. ## # A tibble: 5 × 20 ## # Groups: vs [2] ## vs cyl mpg_avg mpg_se disp_avg disp_se hp_avg hp_se drat_avg drat_se wt_avg wt_se qsec_avg ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 0 4 26 NA 120. NA 91 NA 4.43 NA 2.14 NA 16.7 ## 2 0 6 20.6 0.25 155 2.89 132. 12.5 3.81 0.05 2.76 0.04 16.3 ## 3 0 8 15.1 0.18 353. 4.84 209. 3.64 3.23 0.03 4 0.05 16.8 ## 4 1 4 26.7 0.47 104. 2.78 81.8 2.19 4.04 0.04 2.3 0.06 19.4 ## 5 1 6 19.1 0.41 205. 11.2 115. 2.29 3.42 0.15 3.39 0.03 19.2 ## # … with 7 more variables: qsec_se &lt;dbl&gt;, am_avg &lt;dbl&gt;, am_se &lt;dbl&gt;, gear_avg &lt;dbl&gt;, gear_se &lt;dbl&gt;, ## # carb_avg &lt;dbl&gt;, carb_se &lt;dbl&gt; 這邊用到的是tidyverse中dplyr和magrittr套件的數個功能~ %&gt;%: 管線子(pipe) R 中會用到非常非常多函數( f(x) )，如果有一個任務需要你同時使用多個函數，下意識可能會這樣寫： 或是這樣，這是所謂的巢狀函數 這樣寫起來既冗且不清楚，此時正是管線子派上用場的時候了 在 RStudio 中，管線子%&gt;%可以輸入 ctrl+shift+m 就可以產生 rnorm (100) %&gt;% abs %&gt;% sqrt %&gt;% round( . , digits = 2) %&gt;% head ## [1] 0.62 0.66 0.93 1.07 1.03 1.35 # enter 換行，看起來比較舒服 上面可以發現， %&gt;% 一定是左丟到右，而各函數的()甚至可以節省起來 除非函數的參數需要另外輸入，例round( . , digits = 2)這一行用 . 告訴管線子，資料傳入到第一個參數；用digits = 2取四捨五入到小數點後第二位 group_by( 分組變數A , 分組變數B , ... ) summarize( across ( 條件判斷 , list ( 敘述統計函數1 , 敘述統計函數2 ))) "],["平均值檢定.html", "第 4 章 平均值檢定 4.1 利用t檢定比較兩個族群平均值", " 第 4 章 平均值檢定 4.1 利用t檢定比較兩個族群平均值 在分析實驗結果時，我們最關切的問題，應屬”平均值之間是否有差異”。 要比較兩個平均值的差異，可以應用t檢定。 超過兩組平均值需要比較的時，t檢定就不再適用，要改採變異數分析或是變方分析 (analysis of variance, ANOVA) 來檢定各組平均是否有差異。 4.1.1 資料下載 本筆資料為riceYield，係由亂數產生，下面這個程式碼只要執行一次就好。 # 產生亂數資料 riceYield&lt;-data.frame( &#39;treatment&#39; = (rep(c(&#39;A&#39;,&#39;B&#39;),each=10) ), &#39;yield&#39; = c(rnorm(n = 10 , mean = 5000 , sd = 400),rnorm(n=10 , mean = 6500 , sd = 400) )) 現在來看看這筆資料長怎樣： # 查看 前 10筆資料 head(riceYield) ## treatment yield ## 1 A 4681.672 ## 2 A 4305.209 ## 3 A 4382.316 ## 4 A 5221.014 ## 5 A 5314.447 ## 6 A 4188.577 # 查看 後 10筆資料 tail(riceYield) ## treatment yield ## 15 B 7151.892 ## 16 B 7016.635 ## 17 B 5966.718 ## 18 B 6107.394 ## 19 B 6121.034 ## 20 B 6484.179 首先看到這個東西稱為資料表 (dataframe)，資料表由兩個欄位 (columns)，treatment和yield； 在每個欄位下面都有很多筆資料，例如 B 61XX、B 60XX…，這些值我們稱為觀測值 (observation) 觀測值左方的數字為列 (row)，可以看到這筆資料有2欄20列。 而上方使用到的2個函數(function)的意思： head(資料名稱): 查看該資料前6筆的值 tail(資料名稱): 查看該資料後6筆的值 利用這兩個函數，我們可以很快速地查看資料的大致樣態。 補充 在 R 中直接輸入「東西的名稱」，而沒有用冒號 ( \" or ' ) 括起來，就會得到「該東西的內容」。 例如上述資料集為 “riceYield” ，所以輸入 riceYield 就會連結到該筆資料。 英文字母的大小寫在R程式裡面是不一樣的意思。所以輸入 riceyield 或 Riceyield 或 RiceYield 會跳出錯誤，找不到這個東西(object ‘riceyield’ not found)，因為riceYield才有意義。 print(riceyield) ## Error in print(riceyield): object &#39;riceyield&#39; not found 如果想要查看整筆資料，可以直接輸入資料名稱，或是print(資料名稱) riceYield # 等同於 print(riceYield) ## treatment yield ## 1 A 4681.672 ## 2 A 4305.209 ## 3 A 4382.316 ## 4 A 5221.014 ## 5 A 5314.447 ## 6 A 4188.577 ## 7 A 5038.684 ## 8 A 4598.603 ## 9 A 4763.823 ## 10 A 5308.795 ## 11 B 7001.021 ## 12 B 6659.081 ## 13 B 5658.385 ## 14 B 5958.065 ## 15 B 7151.892 ## 16 B 7016.635 ## 17 B 5966.718 ## 18 B 6107.394 ## 19 B 6121.034 ## 20 B 6484.179 4.1.2 兩樣本t檢定 t檢定在R中是這樣執行的： t.test(data = riceYield, yield ~ treatment, paired = F) t.test上面有三個指令 第1個指令該筆資料的名稱，這筆資料名是我在自己創造的亂數資料riceYield，所以輸入 data = riceYield 第2個指令和第1個指令中間用 , 相隔 第2個指令是告訴R比較的方式，寫法是 觀測值 ~ 處理名稱，注意這裡觀測值和處理名稱都沒有用冒號框住 第3個指令是樣本是否成對 現在來逐行看報表： ## ## Welch Two Sample t-test ## ## data: yield by treatment ## t = -7.6667, df = 17.211, p-value = 5.983e-07 ## alternative hypothesis: true difference in means between group A and group B is not equal to 0 ## 95 percent confidence interval: ## -2080.855 -1183.398 ## sample estimates: ## mean in group A mean in group B ## 4780.314 6412.440 第2行: 表示資料是將yield依照treatment分組 (A vs B) 比較，記得上面我們輸入的 觀測值 ~ 處理名稱 嗎? 第3行: 為檢定結果： t : t 值 df :自由度 p-value : 表示本次檢定所得 p 值 p值的表示方式比較特別，用到”e”，e代表10的幾次方： \\(123456e-08 = 1.23456 \\times 10^{-8}\\) 這邊可以看到p值很小，所以棄卻虛無假說：「兩樣本平均值相等」 ( \\(H_0:\\mu_1 - \\mu_2 =0\\) )。 結論：在\\(\\alpha = 0.05\\)時，兩品種產量具顯著差異。顯著水準\\(\\alpha\\)在t.test函數中沒有辦法設定，是這個函數的小缺憾。 "],["anova.html", "第 5 章 ANOVA 5.1 linear model 5.2 ANOVA 5.3 LSD test 5.4 generate the table 5.5 Plot the data", " 第 5 章 ANOVA 5.1 linear model 5.2 ANOVA 5.3 LSD test 5.4 generate the table 5.5 Plot the data "],["有計畫的比較平均值.html", "第 6 章 有計畫的比較平均值 6.1 計畫性比較-簡單CRD 6.2 計畫性比較-複雜資料", " 第 6 章 有計畫的比較平均值 變方分析結果可以告知「平均值之間是否有差異」。我們可以再利用 {agricolae} 中的 LSD.test 進行多重比較，就可以做出完整的結果表格。 然而，多重比較並不是具有目的性的探討研究結果， （林俊隆老師：先進行變方分析，再進行平均值之間的多重比較幾乎成了統計分析的八股） 若研究者在實驗中，對特別處理組之間的比較有興趣，應該要採用「計畫性的對比」，也就是線性對比。線性對比可以自訂不同處理平均值的比較，因此稱為計畫性對比。 在 R 中，計畫性的比較，被歸納為一般線性假說 (General Linear Hypotheses)和模型參數多重比較 (multiple comparisons for parametric models)，可以利用 {multcomp} 套件的 glht 進行。 這個函數也適用於廣義線性模型、線性混合模型、存活模型。 6.1 計畫性比較-簡單CRD 以iris鳶尾花資料集為例，這個資料集包含有三種物種(species)的花萼(Sepal Length)長度。 假設我們想探討三種品種的花萼長度之間是否具顯著差異，可以用下面程式碼分析 (先安裝跟啟用agricolae噢!)， require(agricolae) # 建立線性模式 m1 &lt;- lm( data=iris , Sepal.Length~Species) # ANOVA summary(aov(m1)) ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## Species 2 63.21 31.606 119.3 &lt;2e-16 *** ## Residuals 147 38.96 0.265 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 # LSD多重比較 L1 &lt;- LSD.test( m1 , trt = &#39;Species&#39;) L1$groups ## Sepal.Length groups ## virginica 6.588 a ## versicolor 5.936 b ## setosa 5.006 c 上述分析包含兩張報表： 以品種為變因的單因子變方分析，結果Species的 P&lt;0.001，顯示棄卻三個品種效應為零的假說（白話文：三品種的平均值之間有顯著差異）， LSD檢定表與各組差異（看起來三個品種平均值兩兩不同），這是基於第一點變方分析的error，是受到變方分析結果保護的保護的LSD (protected LSD)，第一型錯誤率經模擬研究屬於「以試驗為單位的第一型錯誤率」。 若想單獨檢定virginica和setosa之間的差異，或是想知道virginica是不是setosa的1.5倍的計畫性比較呢？ 先安裝套件，啟用套件 if (&#39;multcomp&#39;%in% installed.packages() == FALSE) {install.packages(&#39;multcomp&#39;)} library(multcomp) 進行計畫性比較，我們其實是驗證特定線性對比的虛無假說。 「virginica和setosa的花萼長度是否有顯著差異」 \\(H_0:\\mu_{virginica}-\\mu_{setosa}=0\\) 「virginica的花萼長度是不是setosa的1.5倍?」: \\(H_0:\\mu_{virginica}-1.5\\mu_{setosa}=0\\) 建立一個比較係數的矩陣，該矩陣稱為”回歸係數矩陣” (matrix of coefficients)。 # 線性模式參數 print(coef(m1)) ## (Intercept) Speciesversicolor Speciesvirginica ## 5.006 0.930 1.582 # 利用rbind產生一個矩陣 cp_m # rowname 設為&quot;處理因子的線性對比&quot; # 處理因子的順序則按 lm model 該 factor 的順序 # 這個線性對比只能使用coef(m1)中的物件 cp_m &lt;- rbind ( &#39; 1 se + 0ve - 1vi&#39; = c( 1 , 0 , -1) , &#39;-1.5se + 1ve - 0vi&#39; = c( -1.5 , 1 , 0) ) cp_m ## [,1] [,2] [,3] ## 1 se + 0ve - 1vi 1.0 0 -1 ## -1.5se + 1ve - 0vi -1.5 1 0 以glht來計算。這個函數需要輸入線性模式物件 (由 lm 產生)，還有比較係數的矩陣。用linfct = mcp( 處理 = 矩陣 )。 另外，本函數預設為雙尾檢定(two.side,=0)，如果要進行單尾檢定(&gt; or &lt;)，可以加上參數alternative = c('greater','less')(則一)) glh1 &lt;- glht(m1 , linfct = mcp(Species = cp_m)) glh1 ## ## General Linear Hypotheses ## ## Multiple Comparisons of Means: User-defined Contrasts ## ## ## Linear Hypotheses: ## Estimate ## 1 se + 0ve - 1vi == 0 -1.582 ## -1.5se + 1ve - 0vi == 0 0.930 使用summary察看結果。 summary(glh1) ## ## Simultaneous Tests for General Linear Hypotheses ## ## Multiple Comparisons of Means: User-defined Contrasts ## ## ## Fit: lm(formula = Sepal.Length ~ Species, data = iris) ## ## Linear Hypotheses: ## Estimate Std. Error t value Pr(&gt;|t|) ## 1 se + 0ve - 1vi == 0 -1.582 0.103 -15.366 &lt;1e-10 *** ## -1.5se + 1ve - 0vi == 0 0.930 0.103 9.033 &lt;1e-10 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## (Adjusted p values reported -- single-step method) 可以看到結果兩個線性對比的 P&lt;0.001，所以棄卻兩個虛無假說，得到結論： virginica和setosa的花萼長度之間有顯著差異 virginica的花萼長度不是setosa的1.5倍 glht 也支援另一種比較簡單，不須建立矩陣的寫法 # 也可以直接輸入線性對比假說的數學式: # 注意只能包含之間模型參數物件的名稱 # 用coef(mtm)檢查模型的參數值，用names(mtm$coefficients)查看有參數名稱 glht(m1, linfct = mcp( Species = c(&quot;virginica - setosa = 0&quot;))) ## ## General Linear Hypotheses ## ## Multiple Comparisons of Means: User-defined Contrasts ## ## ## Linear Hypotheses: ## Estimate ## virginica - setosa == 0 1.582 6.2 計畫性比較-複雜資料 接下來利用林俊隆老師書中案例IRRI陸稻殺草劑試驗，資料存放在 riceHerbic require(tidyverse) require(magrittr) riceHerbicide &lt;- read.csv(&#39;dataset/riceHerbicide.csv&#39;) riceHerbicide %&gt;% str ## &#39;data.frame&#39;: 40 obs. of 5 variables: ## $ treatment: chr &quot;Handweedingtwice&quot; &quot;Handweedingtwice&quot; &quot;Handweedingtwice&quot; &quot;Handweedingtwice&quot; ... ## $ applytime: chr &quot;15and35&quot; &quot;15and35&quot; &quot;15and35&quot; &quot;15and35&quot; ... ## $ rate : chr &quot;.&quot; &quot;.&quot; &quot;.&quot; &quot;.&quot; ... ## $ rep : int 1 2 3 4 1 2 3 1 2 3 ... ## $ yield : int 3202 3060 2240 2690 2308 2335 1975 3390 2875 2775 ... 資料的形態不對，處理的部分被視為character，要修正成factor riceHerbicide %&lt;&gt;% mutate(treatment = as.factor(treatment), applytime = as.factor(applytime), rate = as.factor(rate), rep = as.factor(rep)) riceHerbicide %&gt;% map(class) ## $treatment ## [1] &quot;factor&quot; ## ## $applytime ## [1] &quot;factor&quot; ## ## $rate ## [1] &quot;factor&quot; ## ## $rep ## [1] &quot;factor&quot; ## ## $yield ## [1] &quot;integer&quot; 接下來可以進行分析 首先建立一個統計敘述表 se&lt;-function(x) return( sd(x)/length(x) ) riceHerbicide %&gt;% group_by( treatment , applytime ) %&gt;% summarize( across( is.numeric, list(&#39;n&#39; = length,&#39;avg&#39;=mean,&#39;se&#39;=se ))) ## `summarise()` has grouped output by &#39;treatment&#39;. You can override using the `.groups` argument. ## # A tibble: 10 × 5 ## # Groups: treatment [7] ## treatment applytime yield_n yield_avg yield_se ## &lt;fct&gt; &lt;fct&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 CK . 4 1237. 71.2 ## 2 Handweedingtwice 15and35 4 2798 108. ## 3 Phenyedipham 14 3 2565. 117. ## 4 Proapnil/2,4-D 28 6 2610. 84.2 ## 5 Proapnil/CHCH 21 3 2568. 96.6 ## 6 Propanil/Bromoxynil 14 4 2948. 104. ## 7 Propanil/Bromoxynil 21 4 3644 167. ## 8 Propanil/Bromoxynil 28 4 2484. 136. ## 9 Propanil/Ioxynil 14 4 2910. 126. ## 10 Propanil/Ioxynil 28 4 2041 48.5 上表可以看到，控制組(ck)其實產量蠻低的，不到1500，所以殺草劑處理為變因的F檢定很可能是顯著的。 但若是想做計畫性的比較(例如：除草劑效果跟手除效果比較)，就要用線性對比來分析。 建立線性模式物件 m2 &lt;- lm (data = riceHerbicide , yield ~ treatment + rep ) m2 %&gt;% anova ## Analysis of Variance Table ## ## Response: yield ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## treatment 6 9874945 1645824 5.1905 0.0009145 *** ## rep 3 822264 274088 0.8644 0.4702886 ## Residuals 30 9512515 317084 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 可以看到處理間平均值有顯著差異 多重比較 L2 &lt;- LSD.test(m2, trt=&#39;treatment&#39;) L2$group ## yield groups ## Propanil/Bromoxynil 3025.250 a ## Handweedingtwice 2798.000 ab ## Proapnil/2,4-D 2609.667 ab ## Proapnil/CHCH 2567.667 ab ## Phenyedipham 2564.667 ab ## Propanil/Ioxynil 2475.250 b ## CK 1237.250 c 多重比較可以看出手除兩次(handweeding twice)不遜於除草劑，而Propanil/Ioxynil除草劑效果比較不好，控制組雜草叢生，所以產量最低。 線性對比：除草劑效果跟手除效果比較 這裡的處理因子有7個等級，建立矩陣前，先查看這7個等級的順序，再依此建立比較矩陣。 # compaison: CK vs Herbicide # 因子排列順序 riceHerbicide$treatment %&gt;% levels() ## [1] &quot;CK&quot; &quot;Handweedingtwice&quot; &quot;Phenyedipham&quot; &quot;Proapnil/2,4-D&quot; ## [5] &quot;Proapnil/CHCH&quot; &quot;Propanil/Bromoxynil&quot; &quot;Propanil/Ioxynil&quot; # 線性模式 cfm &lt;- rbind( &#39;0CK -5hand + Herbicide&#39; = c( 0 , -5 , 1 , 1 , 1 , 1 , 1 ), &#39;hand - Propanil/Bromoxynil&#39; = c( 0 , 1 , 0 , 0 , 0 , -1, 0 ), &#39;hand - Propanil/Ioxynil&#39; = c( 0 , 1 , 0 , 0 , 0 , 0 , -1 ) ) glht( m2, linfct = mcp( treatment = cfm) ) %&gt;% summary ## ## Simultaneous Tests for General Linear Hypotheses ## ## Multiple Comparisons of Means: User-defined Contrasts ## ## ## Fit: lm(formula = yield ~ treatment + rep, data = riceHerbicide) ## ## Linear Hypotheses: ## Estimate Std. Error t value Pr(&gt;|t|) ## 0CK -5hand + Herbicide == 0 -967.7 1531.7 -0.632 0.777 ## hand - Propanil/Bromoxynil == 0 -227.3 325.1 -0.699 0.730 ## hand - Propanil/Ioxynil == 0 322.7 344.8 0.936 0.564 ## (Adjusted p values reported -- single-step method) 上表可以看出，手除草的效果其實不遜於Propanil/Bromoxynil和Propanil/Ioxynil。 大家可以多去田裡拔拔草，有益材料生長以及身心健康。 "]]
